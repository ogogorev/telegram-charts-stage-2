/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./data/chart1.json":
/*!**************************!*\
  !*** ./data/chart1.json ***!
  \**************************/
/*! exports provided: columns, types, names, colors, default */
/***/ (function(module) {

module.exports = {"columns":[["xy0",930,890,900,980,1120,1250,1220,1030,960,1390,1300,1200,1030,880,1820,1680,1190,1320,1790,1610,1210,1170,1300,1080,1320,1200,970,760,1230,1250,1040,1020,1300,1290,970,900,1050,1040,980,1070,1410,1080,1000,1100,1070,1010,940,1160,1110,990,1070,830,940,1070,1160,1040,1020,1120,1210,3030,2530,1660,1170,1240,1180,1000,1170,720,1010,1300,1020,1180,1080,960,1050,880,950,970,1360,1020,1280,1140,1150,1100,1100,1260,1280,1540,1360,1250,1060,1330,930,1060,940,1190,1320,1180,1050,1210,1370,1330,950,1270,1130,1300,1170,1530,1110,1380,1240,1390,1150,1230,1340,1160,1140,1380,1690,1460,1240,1610,1320,1360,1320,1460,1450,1330,1080,1720,1600,1250,1570,1530,1610,1860,1450,1560,1690,1560,1730,1600,2170,1540,1940,1430,1410,1840,1790,1850,1620,1520,2190,1870,1550,2080,1560,1720,2040,1810,1890,2000,1900,2270,2060,1890,1930,1590,2030,1890,1810,1620,1690,1310,1700,1530,1970,2080,1620,1510,1990,1720,1750,1870,1740,1620,1840,1980,1910,1790,2080,1820,1530,2140,2440,2130,2430,2180,2080,2190,2090,1910,2440,1940,2680,3310,2510,2200,3020,2550,2450,2800,2450,2780,3020,2680,2210,2550,3160,2870,2690,3140,2820,2850,2160,2540,3050,2720,2540,3000,2630,2660,2780,2350,2510,2980,2650,2770,2220,3000,2950,2450,2610,2270,2200,2200,2920,2600,2470,2180,2480,2400,2450,2970,2830,2740,2680,2750,2200,2720,2270,3100,3510,3400,2920,2240,2330,2660,3400,3240,2940,3300,3760,3270,3460,3340,2820,2300,2830,2690,2760,2570,2420,2730,2480,3000,3260,2920,2750,2660,3130,3480,2530,3140,2200,2970,2900,2510,2500,2660,2970,2810,3200,2640,2790,3360,2690,2750,2810,3090,3080,2490,2810,2570,2630,2370,3320,2610,2300,2670,2470,2680,3270,3580,3000,2670,2540,2740,2940,2800,3590,3000,3130,3030,2460,2400,2610,3240,4010,2880,2930,2890,3240,2600,3530,2850,3580,3480,3210,3150,2730,3240,2720,3210,3090,3310,2670,2750,2540,2600,2930,3400,3050,3480,2930],["y1",1060,990,1140,1090,1210,1160,1450,970,1400,1140,1230,1440,1660,1130,1390,1410,1110,1060,1100,1340,1140,1340,980,1390,1190,1350,1390,1230,1280,1250,1360,1470,1540,1170,1500,1330,1330,1190,1280,1370,1460,1160,1490,1300,1240,1370,1330,1360,1780,1470,1300,1390,1420,1450,1520,1270,1180,1270,1440,1470,1500,1440,1710,1460,1390,1510,1510,1730,1630,1440,1690,1480,1340,1550,1410,1470,1380,1550,1280,1550,1500,1350,1280,1270,1430,1330,1190,1380,1790,1610,1240,1520,1120,1250,1040,1370,1140,1650,1840,1320,1860,1490,1680,1920,1190,1410,1180,1510,1490,1950,1700,1060,1630,1410,1230,1340,1640,1620,1610,1780,1320,1430,1510,1410,1660,1610,1320,1420,1360,1330,1300,1370,1590,1380,1580,1250,1460,1740,2250,1820,1670,1590,1710,1630,1770,1410,2100,1640,1670,1560,1820,1580,1560,1680,1520,1660,1570,1790,1560,1850,1670,2050,1660,1690,2110,1900,2280,1680,1770,2250,1910,2190,2070,2160,1810,1890,2130,2470,2150,2320,2420,2510,2390,2340,2260,2250,2250,2560,2090,1620,2340,2410,2270,2470,2360,2520,2380,2690,2590,2600,3010,2970,2480,2680,2910,2960,3150,3290,2380,2860,3130,2680,2980,3030,2900,3570,3340,2970,2910,3130,3180,3370,3590,3380,3720,3670,3480,3470,3770,3400,3060,3080,3090,3380,3040,3080,3410,3620,3320,2890,3570,3260,3100,3450,3490,3070,2640,3360,3260,3030,3250,3690,2950,2910,3540,3140,3090,3350,2960,2930,2940,3280,3080,2750,3370,3740,2550,2340,3290,2800,2910,3160,3200,3640,2910,2930,2830,3230,3190,2930,3090,2530,2760,2990,2700,3130,3140,3020,2790,2820,3400,3360,3100,3470,2560,3030,3340,3240,3540,3310,3300,3040,2870,2960,3140,2960,3130,2910,3140,2380,3080,3100,2910,2700,3020,2590,2790,2880,3390,3190,3130,3320,2480,2850,3070,3030,2750,3190,3130,2960,3060,2810,2810,2980,3130,3150,2990,2310,2690,3070,3670,3530,2890,2510,2890,3090,2930,2850,3260,3720,2460,2610,3280,2860,3240,3420,2920,2280,2840,3030,3370,2650,3200,3190,2590]],"types":{"y0":"line","y1":"line","x":"x"},"names":{"y0":"Joined","y1":"Left"},"colors":{"y0":"#4BD964","y1":"#FE3C30"}};

/***/ }),

/***/ "./data/chart2.json":
/*!**************************!*\
  !*** ./data/chart2.json ***!
  \**************************/
/*! exports provided: columns, types, names, colors, y_scaled, default */
/***/ (function(module) {

module.exports = {"columns":[["x",1523059200000,1523145600000,1523232000000,1523318400000,1523404800000,1523491200000,1523577600000,1523664000000,1523750400000,1523836800000,1523923200000,1524009600000,1524096000000,1524182400000,1524268800000,1524355200000,1524441600000,1524528000000,1524614400000,1524700800000,1524787200000,1524873600000,1524960000000,1525046400000,1525132800000,1525219200000,1525305600000,1525392000000,1525478400000,1525564800000,1525651200000,1525737600000,1525824000000,1525910400000,1525996800000,1526083200000,1526169600000,1526256000000,1526342400000,1526428800000,1526515200000,1526601600000,1526688000000,1526774400000,1526860800000,1526947200000,1527033600000,1527120000000,1527206400000,1527292800000,1527379200000,1527465600000,1527552000000,1527638400000,1527724800000,1527811200000,1527897600000,1527984000000,1528070400000,1528156800000,1528243200000,1528329600000,1528416000000,1528502400000,1528588800000,1528675200000,1528761600000,1528848000000,1528934400000,1529020800000,1529107200000,1529193600000,1529280000000,1529366400000,1529452800000,1529539200000,1529625600000,1529712000000,1529798400000,1529884800000,1529971200000,1530057600000,1530144000000,1530230400000,1530316800000,1530403200000,1530489600000,1530576000000,1530662400000,1530748800000,1530835200000,1530921600000,1531008000000,1531094400000,1531180800000,1531267200000,1531353600000,1531440000000,1531526400000,1531612800000,1531699200000,1531785600000,1531872000000,1531958400000,1532044800000,1532131200000,1532217600000,1532304000000,1532390400000,1532476800000,1532563200000,1532649600000,1532736000000,1532822400000,1532908800000,1532995200000,1533081600000,1533168000000,1533254400000,1533340800000,1533427200000,1533513600000,1533600000000,1533686400000,1533772800000,1533859200000,1533945600000,1534032000000,1534118400000,1534204800000,1534291200000,1534377600000,1534464000000,1534550400000,1534636800000,1534723200000,1534809600000,1534896000000,1534982400000,1535068800000,1535155200000,1535241600000,1535328000000,1535414400000,1535500800000,1535587200000,1535673600000,1535760000000,1535846400000,1535932800000,1536019200000,1536105600000,1536192000000,1536278400000,1536364800000,1536451200000,1536537600000,1536624000000,1536710400000,1536796800000,1536883200000,1536969600000,1537056000000,1537142400000,1537228800000,1537315200000,1537401600000,1537488000000,1537574400000,1537660800000,1537747200000,1537833600000,1537920000000,1538006400000,1538092800000,1538179200000,1538265600000,1538352000000,1538438400000,1538524800000,1538611200000,1538697600000,1538784000000,1538870400000,1538956800000,1539043200000,1539129600000,1539216000000,1539302400000,1539388800000,1539475200000,1539561600000,1539648000000,1539734400000,1539820800000,1539907200000,1539993600000,1540080000000,1540166400000,1540252800000,1540339200000,1540425600000,1540512000000,1540598400000,1540684800000,1540771200000,1540857600000,1540944000000,1541030400000,1541116800000,1541203200000,1541289600000,1541376000000,1541462400000,1541548800000,1541635200000,1541721600000,1541808000000,1541894400000,1541980800000,1542067200000,1542153600000,1542240000000,1542326400000,1542412800000,1542499200000,1542585600000,1542672000000,1542758400000,1542844800000,1542931200000,1543017600000,1543104000000,1543190400000,1543276800000,1543363200000,1543449600000,1543536000000,1543622400000,1543708800000,1543795200000,1543881600000,1543968000000,1544054400000,1544140800000,1544227200000,1544313600000,1544400000000,1544486400000,1544572800000,1544659200000,1544745600000,1544832000000,1544918400000,1545004800000,1545091200000,1545177600000,1545264000000,1545350400000,1545436800000,1545523200000,1545609600000,1545696000000,1545782400000,1545868800000,1545955200000,1546041600000,1546128000000,1546214400000,1546300800000,1546387200000,1546473600000,1546560000000,1546646400000,1546732800000,1546819200000,1546905600000,1546992000000,1547078400000,1547164800000,1547251200000,1547337600000,1547424000000,1547510400000,1547596800000,1547683200000,1547769600000,1547856000000,1547942400000,1548028800000,1548115200000,1548201600000,1548288000000,1548374400000,1548460800000,1548547200000,1548633600000,1548720000000,1548806400000,1548892800000,1548979200000,1549065600000,1549152000000,1549238400000,1549324800000,1549411200000,1549497600000,1549584000000,1549670400000,1549756800000,1549843200000,1549929600000,1550016000000,1550102400000,1550188800000,1550275200000,1550361600000,1550448000000,1550534400000,1550620800000,1550707200000,1550793600000,1550880000000,1550966400000,1551052800000,1551139200000,1551225600000,1551312000000,1551398400000,1551484800000,1551571200000,1551657600000,1551744000000,1551830400000,1551916800000,1552003200000,1552089600000,1552176000000,1552262400000,1552348800000,1552435200000,1552521600000,1552608000000,1552694400000,1552780800000,1552867200000,1552953600000,1553040000000,1553126400000,1553212800000,1553299200000,1553385600000,1553472000000,1553558400000,1553644800000,1553731200000,1553817600000,1553904000000,1553990400000,1554076800000,1554163200000,1554249600000,1554336000000,1554422400000,1554508800000],["y0",272400,311800,339600,335800,335800,328800,317600,299600,337200,366400,350200,349800,354400,348400,324200,329000,356200,356200,329000,352400,343800,308400,261400,364400,333600,380000,353600,345400,320200,355000,354400,365000,349200,353000,339200,320200,335800,381400,357000,355200,354800,332800,320600,329400,365800,363400,365000,361600,345200,300800,344200,370800,360200,362600,349400,357800,294800,349000,372200,368200,365600,365600,357000,320200,329800,383600,383600,382200,363000,361200,329200,351000,381400,364200,394600,372200,363000,335400,361800,379600,389000,382000,389000,370400,326000,363200,406400,392200,368400,398200,367200,326200,335600,386800,386000,378600,378800,387400,341600,349000,404600,379800,388600,393600,385200,345400,371600,419600,399800,422000,410800,410200,381200,380400,442600,457800,453000,459200,457200,411000,428600,465800,451000,459800,484600,461200,427000,421800,481800,466600,402400,477800,466600,467200,457200,517000,493000,482600,504400,505600,478800,491400,518800,520800,508800,522800,531400,492400,508400,557800,564200,528000,555200,537600,480400,520600,551000,566000,531000,531200,519400,499000,495000,553800,578000,553200,554800,532400,501800,540600,567600,567600,563000,542400,566600,486800,538400,621200,580800,574200,597200,584000,522200,589600,622800,623800,627800,595200,576000,366000,592200,655600,660000,640000,639600,638400,590800,675600,746600,708400,710400,722400,708600,632200,764400,840200,810200,667000,766800,766000,740400,850800,858400,857400,851800,851800,821000,757600,851400,883000,883600,879800,852800,804800,730600,805800,864000,844800,834800,838800,809200,722800,843800,894000,820400,819000,810000,793400,737600,818000,866800,830600,845000,819200,760000,728400,793200,830000,837600,811400,823400,752800,696400,770600,844800,823000,793400,812000,769400,723200,755600,764600,811200,826200,866800,833000,755000,770600,649800,740400,836800,833600,859000,796000,834800,858400,809000,853000,801400,763600,713600,799200,819200,818000,781800,809200,736600,689800,802400,828600,794200,813000,788400,755200,689200,777800,811200,766000,809400,776800,759000,684800,807400,830800,802800,786000,751800,745000,666400,773200,795200,743600,739200,714000,727600,654000,717000,751600,739600,757600,730600,705200,674400,730800,767000,751600,776600,712000,688000,637800,686000,748600,750200,765400,742400,701000,636800,720400,779000,765200,851200,793000,731400,651200,734800,825400,790800,763400,724200,723600,625800,714600,803600,742600,738000,745800,706600,613600,712000,767400,750800,821200,813400,757800,683800],["y1",12360,16240,14210,14040,15190,13570,14020,15600,16080,15800,16740,15680,16790,15520,17410,17660,17000,15080,17190,17020,16620,15200,13210,16970,16030,16090,16800,15280,15450,15990,17130,14970,16020,15780,15770,15720,16210,15820,16080,14860,14210,14980,16200,15430,15510,16750,16460,15130,15120,15580,18040,16380,15940,16590,15950,15480,14940,16520,16570,15910,15950,16280,17120,15720,16600,17580,16260,17270,15660,16500,16410,17140,16240,17330,16320,17490,17220,17030,19130,17440,17350,17010,19050,16150,16350,18280,17670,19690,17470,16320,16180,16290,15440,16600,17430,17800,18110,16870,17200,16700,18010,18110,17850,17600,17870,18100,17300,19960,18340,19650,19710,21300,18930,20090,20240,21150,21020,21940,22350,22160,20800,22390,21450,22970,20690,23410,21490,21690,20650,22440,21630,23420,22860,23490,24460,23610,23810,22840,23540,24800,23460,24140,25050,23910,23790,23190,23390,23160,23830,23680,25940,23420,23330,23630,23400,26230,22690,24700,22010,23050,22460,24620,24960,26180,24540,24240,24690,24140,25140,29410,25900,25880,24600,25380,25090,24930,28930,26570,25270,26560,25520,27150,25130,25600,28580,25800,25500,27870,26320,18930,30390,27640,27790,28380,29230,28160,28490,31290,31710,32150,29840,29860,30240,30750,33300,34750,33250,31920,36940,36930,33360,38500,33700,34630,36580,36130,34960,35210,37600,37100,34640,36840,36150,33850,32800,35440,37510,36770,35560,35460,36650,35370,36990,39810,39340,36350,35350,33160,34440,36720,35200,37240,36030,36330,34940,34840,39350,37370,34040,33510,35270,32940,33310,34730,35760,37300,35190,33420,32550,33450,34360,41660,42960,38970,37080,37150,36460,41330,34220,34980,34840,39150,38110,35380,38760,36080,33790,36150,35960,32570,33180,36000,36390,33950,35390,36680,36540,31270,34720,35030,37090,38120,32870,34800,35000,34370,35070,35430,36830,37380,35390,33170,37300,34710,36450,37500,37820,31590,34370,37430,36650,35300,35520,35830,35650,32070,38700,34460,34450,32720,34900,35680,33340,37500,35730,35270,37150,35010,35260,33690,40330,36410,35540,35600,35480,37740,35600,44060,34610,37160,37880,36800,37940,35140,36900,40490,37740,36330,37730,35330,35800,39580,37590,35770,36430,36720,36860,33580,36830,35830,36600,37840,39450,35390,35310]],"types":{"y0":"line","y1":"line","x":"x"},"names":{"y0":"Views","y1":"Shares"},"colors":{"y0":"#108BE3","y1":"#E8AF14"},"y_scaled":true};

/***/ }),

/***/ "./data/chart3.json":
/*!**************************!*\
  !*** ./data/chart3.json ***!
  \**************************/
/*! exports provided: columns, types, names, colors, stacked, default */
/***/ (function(module) {

module.exports = {"columns":[["xy0",12360,16240,14210,14040,15190,13570,14020,15600,16080,15800,16740,15680,16790,15520,17410,17660,17000,15080,17190,17020,16620,15200,13210,16970,16030,16090,16800,15280,15450,15990,17130,14970,16020,15780,15770,15720,16210,15820,16080,14860,14210,14980,16200,15430,15510,16750,16460,15130,15120,15580,18040,16380,15940,16590,15950,15480,14940,16520,16570,15910,15950,16280,17120,15720,16600,17580,16260,17270,15660,16500,16410,17140,16240,17330,16320,17490,17220,17030,19130,17440,17350,17010,19050,16150,16350,18280,17670,19690,17470,16320,16180,16290,15440,16600,17430,17800,18110,16870,17200,16700,18010,18110,17850,17600,17870,18100,17300,19960,18340,19650,19710,21300,18930,20090,20240,21150,21020,21940,22350,22160,20800,22390,21450,22970,20690,23410,21490,21690,20650,22440,21630,23420,22860,23490,24460,23610,23810,22840,23540,24800,23460,24140,25050,23910,23790,23190,23390,23160,23830,23680,25940,23420,23330,23630,23400,26230,22690,24700,22010,23050,22460,24620,24960,26180,24540,24240,24690,24140,25140,29410,25900,25880,24600,25380,25090,24930,28930,26570,25270,26560,25520,27150,25130,25600,28580,25800,25500,27870,26320,18930,30390,27640,27790,28380,29230,28160,28490,31290,31710,32150,29840,29860,30240,30750,33300,34750,33250,31920,36940,36930,33360,38500,33700,34630,36580,36130,34960,35210,37600,37100,34640,36840,36150,33850,32800,35440,37510,36770,35560,35460,36650,35370,36990,39810,39340,36350,35350,33160,34440,36720,35200,37240,36030,36330,34940,34840,39350,37370,34040,33510,35270,32940,33310,34730,35760,37300,35190,33420,32550,33450,34360,41660,42960,38970,37080,37150,36460,41330,34220,34980,34840,39150,38110,35380,38760,36080,33790,36150,35960,32570,33180,36000,36390,33950,35390,36680,36540,31270,34720,35030,37090,38120,32870,34800,35000,34370,35070,35430,36830,37380,35390,33170,37300,34710,36450,37500,37820,31590,34370,37430,36650,35300,35520,35830,35650,32070,38700,34460,34450,32720,34900,35680,33340,37500,35730,35270,37150,35010,35260,33690,40330,36410,35540,35600,35480,37740,35600,44060,34610,37160,37880,36800,37940,35140,36900,40490,37740,36330,37730,35330,35800,39580,37590,35770,36430,36720,36860,33580,36830,35830,36600,37840,39450,35390,35310],["y1",9850,8210,10800,10490,11600,11160,11920,10210,8010,12010,12270,11720,12790,12330,10970,10150,11180,12150,9320,11460,12290,10400,7790,12150,8920,11330,11450,11550,10900,9800,11770,12130,11070,11850,11670,11260,10110,10790,10940,11200,12710,11660,9980,9120,11410,12830,11380,13290,12080,11020,9770,11700,11980,13020,12200,12320,9780,10660,10900,11940,12490,11300,12220,10410,10270,12310,12580,12170,12590,13110,10510,8960,12310,13270,13860,13460,12980,10030,10480,11550,12540,11630,13280,12670,9230,9510,11770,12160,12510,12130,12220,9630,8880,11210,10570,11600,12920,11260,11260,9570,11440,11850,12090,12640,12330,12180,9550,12990,12830,13600,14390,13380,11200,9350,13120,14140,15400,14090,14010,12900,10810,13690,13380,13910,13970,14260,12480,11110,12830,12910,8660,11560,13010,11910,11520,13260,15130,13850,14270,13940,13170,12080,15420,15530,16720,16800,16950,15980,13840,16930,17870,17780,17860,18180,16790,13320,18470,19150,18290,20630,19410,16410,15320,18460,18970,18930,20580,20850,17600,17750,22190,19970,21820,22900,21350,17600,16250,21290,20670,21300,22480,21530,17690,18860,21140,21100,22620,21730,21500,14230,17470,22730,22990,22790,23880,23070,21310,20790,23750,26840,25400,27300,25810,23570,21880,27560,29980,29890,22490,27400,25220,23230,28400,29720,31360,29380,31590,27210,23950,28940,29740,32280,32270,32520,27280,22010,30900,31550,32050,31800,32050,28210,23880,31450,29530,30470,32430,31660,27030,24270,31230,31630,31470,33030,32890,23600,24670,30340,31460,31610,31910,30550,26730,25180,29610,32710,33670,35040,35140,27820,23700,24670,16390,18390,29090,28130,25560,23590,21840,16420,24260,27670,29570,25730,22280,29060,29430,28930,29790,31130,25750,22390,29480,31690,30350,31150,31420,26440,22340,28380,29510,31160,30110,31910,25370,23090,30500,30550,29850,29560,30570,24870,23180,28910,29270,29670,31770,30990,26920,24520,30170,30620,30320,28920,30310,25300,22950,28800,30250,31800,30740,31250,27140,24710,30040,30210,32370,30260,31210,25190,24120,29280,30080,31050,31120,29810,25580,22500,28520,30260,35910,31510,31150,25450,23190,29760,31150,30540,30290,31860,26750,25020,30190,30700,30360,31060,30420,27340,22040,29990,30980,32710,32880,33190,30180],["y2",13730,13690,15220,13820,13080,13870,13300,11290,14240,15260,15150,14600,13690,14460,12750,13510,15220,15070,12730,15170,14140,12650,11480,13980,14500,15550,15590,15470,14040,14770,16590,14470,14840,14910,14490,13380,14410,14170,14800,15700,15180,14010,13020,14750,14950,14350,14710,15120,14070,12520,14680,15510,14200,15610,15180,14540,11940,15190,16180,15670,13830,14800,14560,12850,13800,14890,16190,15610,15230,14770,13940,15450,15530,16340,16000,16880,15530,13800,14410,15520,16630,14890,14660,15540,14100,15960,15950,16010,16150,15500,13800,14030,14520,16270,16110,15870,15270,15810,13670,15600,16290,15610,16060,16400,16340,13810,14920,16820,16950,17530,17490,17050,14650,15670,19000,18680,18240,18210,17680,16420,16190,16760,16580,18300,20560,18760,16440,17800,18270,21800,16760,18260,18150,18100,18210,20350,20730,22270,21910,19380,17800,20190,19540,19730,19530,19810,21450,17920,19850,21320,22400,22700,22810,20180,19140,21540,21730,21580,22800,23640,19150,22070,22740,20730,23820,21880,22700,22450,21120,21180,24150,20920,23890,21320,22110,20860,21190,22710,22170,23680,23590,23760,23170,22360,24520,23830,24690,26700,22220,14530,22920,26310,24840,24910,27490,24910,23330,28350,29540,29300,28910,30530,27710,26870,31170,34050,32040,28070,31970,32860,30500,35250,34900,35680,34820,36470,36600,31880,37310,38540,37510,36470,37070,33790,32550,34480,35660,34840,35070,34430,33800,29450,32910,37250,34730,33970,33660,32470,29670,32120,35610,33620,35090,32780,30180,26990,32680,35540,33250,33070,31350,31500,29800,29620,32630,32060,31030,31850,31040,29000,31410,30880,34180,31390,31410,33940,30190,29970,27620,28530,31660,35190,34050,33360,33250,32930,33570,32310,31930,32520,31000,34450,35120,33320,32760,32310,32110,30030,32290,32180,34510,34630,33840,32850,29680,32390,35360,32350,33910,32170,31140,25910,31100,33070,31630,32140,32980,31910,26510,28700,32450,30350,30620,28170,27090,24020,26210,30630,30010,29060,28280,27480,25640,27380,31170,30140,29880,27080,27190,26540,26100,28950,28390,29580,28430,27180,26900,27890,30370,29010,37710,31070,28200,24050,29250,30280,30940,30400,29590,27840,25070,28680,30740,28600,30670,30550,28430,26900,27170,29890,30590,33270,31990,30770,27010],["y3",930,890,900,980,1120,1250,1220,1030,960,1390,1300,1200,1030,880,1820,1680,1190,1320,1790,1610,1210,1170,1300,1080,1320,1200,970,760,1230,1250,1040,1020,1300,1290,970,900,1050,1040,980,1070,1410,1080,1000,1100,1070,1010,940,1160,1110,990,1070,830,940,1070,1160,1040,1020,1120,1210,3030,2530,1660,1170,1240,1180,1000,1170,720,1010,1300,1020,1180,1080,960,1050,880,950,970,1360,1020,1280,1140,1150,1100,1100,1260,1280,1540,1360,1250,1060,1330,930,1060,940,1190,1320,1180,1050,1210,1370,1330,950,1270,1130,1300,1170,1530,1110,1380,1240,1390,1150,1230,1340,1160,1140,1380,1690,1460,1240,1610,1320,1360,1320,1460,1450,1330,1080,1720,1600,1250,1570,1530,1610,1860,1450,1560,1690,1560,1730,1600,2170,1540,1940,1430,1410,1840,1790,1850,1620,1520,2190,1870,1550,2080,1560,1720,2040,1810,1890,2000,1900,2270,2060,1890,1930,1590,2030,1890,1810,1620,1690,1310,1700,1530,1970,2080,1620,1510,1990,1720,1750,1870,1740,1620,1840,1980,1910,1790,2080,1820,1530,2140,2440,2130,2430,2180,2080,2190,2090,1910,2440,1940,2680,3310,2510,2200,3020,2550,2450,2800,2450,2780,3020,2680,2210,2550,3160,2870,2690,3140,2820,2850,2160,2540,3050,2720,2540,3000,2630,2660,2780,2350,2510,2980,2650,2770,2220,3000,2950,2450,2610,2270,2200,2200,2920,2600,2470,2180,2480,2400,2450,2970,2830,2740,2680,2750,2200,2720,2270,3100,3510,3400,2920,2240,2330,2660,3400,3240,2940,3300,3760,3270,3460,3340,2820,2300,2830,2690,2760,2570,2420,2730,2480,3000,3260,2920,2750,2660,3130,3480,2530,3140,2200,2970,2900,2510,2500,2660,2970,2810,3200,2640,2790,3360,2690,2750,2810,3090,3080,2490,2810,2570,2630,2370,3320,2610,2300,2670,2470,2680,3270,3580,3000,2670,2540,2740,2940,2800,3590,3000,3130,3030,2460,2400,2610,3240,4010,2880,2930,2890,3240,2600,3530,2850,3580,3480,3210,3150,2730,3240,2720,3210,3090,3310,2670,2750,2540,2600,2930,3400,3050,3480,2930],["y4",2090,2070,2080,2490,2580,2210,2670,2940,2280,2520,2840,2480,3150,2590,2630,2490,3220,2390,2430,2490,2490,1520,1680,2680,2240,2630,2440,2340,2430,2710,2670,2420,2210,2750,3630,2450,2650,2330,2120,2310,2280,2500,2310,2410,2210,2210,2550,2690,2190,2030,1940,1790,3250,3370,2580,2330,2190,2270,2460,2310,2030,3070,2440,1820,2260,1580,2070,2230,2890,2430,1540,2450,2590,2200,2470,2790,2430,1960,2370,2470,2880,2960,2140,2420,1570,2530,2430,2850,2290,2380,2450,3150,3240,2100,2210,2580,2780,2880,2220,2290,2560,2550,3230,3760,4940,2460,2890,3120,3950,3170,2850,3480,2160,2770,3070,4080,2860,2950,2550,3890,3760,5150,7520,5950,4400,3150,2820,3390,3740,3140,3480,2480,2980,4740,3230,3370,3970,3730,3910,3890,2250,3340,5110,4360,3940,3030,3130,3470,3470,4230,3190,2950,5310,4600,3540,3170,3780,3210,4020,5060,4180,3710,4540,4070,3530,4100,3950,3810,4960,4750,4030,3760,4790,6930,5160,4060,4490,4500,4410,4950,4850,4380,4500,3270,3620,4910,4160,4520,5990,3080,5560,4510,4190,4390,4380,4260,4240,4260,4650,4630,3880,5130,4430,5030,5610,4420,4200,4300,5710,6660,4860,5620,4330,4120,10220,12330,7070,6430,6420,5510,4970,5390,5910,5440,4760,6080,4730,6690,6130,6050,4920,5310,5860,6880,6510,4860,6470,4960,4820,6520,5230,4350,5110,6100,4660,5110,4780,3790,5480,3560,4670,4530,5010,4590,4350,5670,3950,5150,4430,3630,4390,4090,3730,3380,6720,7270,5950,5350,4280,4400,6240,6950,5740,4400,5100,5880,4670,4710,6370,5630,4960,5780,6110,6070,5160,5280,4890,4560,5700,5030,4770,5370,6800,7150,3830,12010,4190,4320,4520,5850,5830,5670,4670,4980,4330,5050,5820,4610,5920,5160,4690,3980,4380,4450,3670,3440,4870,4330,4510,3880,4830,4850,4290,4400,5830,3760,4940,4670,5020,3920,4480,5410,5410,3750,5490,4150,3990,3910,4460,4240,3770,5000,4520,5000,4070,5080,4710,4440,5540,5280,5960,5260,4480,5540,6320,6150,5610,4900,4300,5010,5440,4450,5570,5840,4530],["y5",2520,2490,3090,2800,2820,3140,2780,2780,2770,2770,2960,2660,3010,2590,2670,2800,2630,2860,2590,2930,3020,2520,1990,2740,2540,2950,2920,3190,2610,2710,2900,3340,3240,2920,2870,2610,2600,2660,3110,3080,3260,2790,3140,2510,2940,2700,2780,3010,3010,2440,2750,3250,3500,3190,3150,2720,2550,2580,3060,2820,2640,2980,2720,2440,2270,3010,3150,3160,2830,2710,2420,2870,3130,2860,2840,2940,2780,2630,2770,2690,3100,3050,3020,2830,2270,2630,2550,3260,3120,2500,2720,2360,2170,3180,3410,2830,3250,2890,2680,2500,3730,3290,2790,2660,3160,2780,2490,3480,2990,2980,3110,3550,2900,2560,2920,3210,3410,3340,3190,3370,3430,3370,3380,3570,3360,3280,2920,3100,3250,3620,2640,2920,3370,2890,3210,3700,3880,3340,3630,3810,3960,4240,3680,3690,3540,3900,4130,3230,3430,4060,4240,3920,3950,4300,3340,3290,3670,3410,3640,4180,3560,3160,3060,3920,3980,4390,3810,3960,3590,4130,4310,3970,3870,4080,4170,3850,3750,3930,3880,3770,3970,3810,3910,3960,4180,4420,4390,4460,4420,2620,4500,4300,4470,4590,4580,4470,4120,4610,4730,5040,4970,5170,4990,4210,4870,5340,5170,4530,5560,5230,4300,5140,5630,5780,5400,5200,5310,5130,5480,5260,5780,5750,5350,5460,4670,4900,6280,6380,6580,6710,7110,5210,5230,5790,5720,5340,5510,5090,4550,5150,5370,5460,5550,5600,5510,5140,4960,5160,5180,5260,5340,5030,4750,5150,5030,5220,4620,5250,5000,4650,4080,4320,4360,4160,5420,5690,4580,4600,3750,4000,4990,5070,5510,5480,5260,5840,5330,5930,5640,5150,5560,4640,6140,5560,5880,6310,5370,5160,4920,5550,5730,5410,5180,5820,4790,5990,4960,5490,5540,5500,5140,5000,4960,5650,5440,5360,5790,5360,4690,5370,5490,5280,5510,5840,5720,4590,4760,5380,5220,5310,5300,5400,4540,4900,5140,5360,5540,5310,5480,4690,4800,5320,5900,5450,5250,4900,4410,4760,5150,5110,5890,5900,5460,4770,5100,5700,5560,5510,5700,5080,4880,4950,5880,5840,5470,5450,5320,4490,4090,5870,5420,6160,6240,5640,4530],["y6",120,60,90,70,50,60,110,150,100,60,70,50,60,80,130,80,90,130,170,80,160,100,90,100,90,40,90,100,80,100,110,100,80,120,180,160,110,50,60,50,20,110,130,120,50,40,110,110,70,140,150,70,50,110,30,70,130,110,140,60,60,80,170,110,140,60,40,140,60,160,150,90,70,150,130,100,80,110,100,30,80,80,130,130,150,130,160,70,70,70,80,200,80,80,80,50,70,80,70,90,50,70,120,140,110,170,180,90,70,80,100,150,220,170,90,120,140,90,190,190,100,110,80,180,150,140,150,220,170,120,160,130,170,150,190,200,120,100,130,210,190,100,100,180,130,80,90,230,130,100,120,120,110,100,140,140,50,100,100,100,150,140,110,120,80,100,70,150,120,100,100,100,130,110,110,190,170,210,100,90,130,210,180,90,160,90,70,120,190,140,100,100,100,160,160,200,190,190,100,90,140,180,120,170,130,60,50,160,130,170,280,160,130,140,170,110,240,220,150,110,150,80,180,150,70,190,80,150,220,210,160,170,90,120,50,180,180,130,220,100,150,200,110,280,180,150,190,140,60,120,100,110,180,100,140,120,200,180,220,170,160,70,140,150,210,120,200,80,330,90,100,140,60,100,160,50,80,120,80,120,170,80,80,110,80,70,210,140,190,60,100,120,60,170,240,200,70,80,80,120,160,90,120,100,130,180,110,130,240,130,90,80,150,150,240,250,140,80,130,170,120,120,170,110,80,170,150,130,190,210,180,120,50,100,180,210,170,150,120,110,170,160,220,140,150,160,130,120,60,230,170,270,120,160,200,160,150,180,210,200,150,110,120,160,210]],"types":{"y0":"bar","y1":"bar","y2":"bar","y3":"bar","y4":"bar","y5":"bar","y6":"bar","x":"x"},"names":{"y0":"Apples","y1":"Oranges","y2":"Lemons","y3":"Apricots","y4":"Kiwi","y5":"Mango","y6":"Pears"},"colors":{"y0":"#3497ED","y1":"#2373DB","y2":"#9ED448","y3":"#5FB641","y4":"#F5BD25","y5":"#F79E39","y6":"#E65850"},"stacked":true};

/***/ }),

/***/ "./data/chart4.json":
/*!**************************!*\
  !*** ./data/chart4.json ***!
  \**************************/
/*! exports provided: columns, types, names, colors, default */
/***/ (function(module) {

module.exports = {"columns":[["xy0",30600800,31327000,35296200,36671400,38742200,39538200,40365200,42177400,41253800,42994000,41398800,42850400,43624400,44164400,43575200,42069200,42733200,40369800,40467800,43160200,47773400,46834200,43145800,64329200,38156800,36229800,34755800,36527000,33582800,31686200,32552000,30499600,29413400,30605200,29920600,27942600,26974600,24874400,24546600,24789000,25654200,26277000,24491600,24444600,24416600,24593400,25214400,24817200,25938600,25223200,23816000,23189200,22654200,22579000,22185600,23108800,22146600,19930200,22292000,19980600,21812600,19632600,21635800,20944800,20299200,20543000,20725800,20119400,20247600,17315200,19133200,19691000,20111200,19735400,17922600,18467200,19467400,18115600,19175200,17285400,18604800,18150200,18689400,19497800,19688800,20074200,19243000,20180600,19962400,19130800,19464800,20429200,20254600,21029800,20104400,19559400,18572400,19560800,20320200,20534000,20865800,20705000,20326600,19589400,20039800,20672000,20448600,20431400,20203000,19807800,19114600,19737000,20446400,19984200,19013000,21106600,18543800,16215800,16996600,16285200,16812800,18398000,17487600,19092400,18394000,18933000,19541600,19880800,20069600,19929800,18914400,18397600,18944200,20357400,19935200,19857200,19392000,18742600,18331000,18930400,19992400,19907600,20189800,19738000,18392200,17742200,18294600,19626800,19650000,20076800,20142200,19624800,18711200,19298400,20398200,20290600,20346200,21254200,20288000,19139800,19492200,19611800,19389000,18652400,17296600,16267200,17129200,21290200,19845000,19130600,19087400,18704600,19270000,19601800,20168800,18454200,18388800,18521200,18595400,18921800,18961600,20607400,18806000,18761800,18780400,19312600,19751200,20555800,21416400,11018800,19735000,19565600,19622600,20178400,20873400,21822600,20152400,20210000,20094000,19408600,20045200,21272800,22675200,20556600,20628800,20193800,23418000,21550800,22184600,23645000,21168000,21156400,20624600,20763600,22816400,22499400,22984000,19503000,19126800,18676000,18452400,18917800,19860600,21129200,18835600,18816400,18739400,19215600,18999000,19278200,21011000,20021200,21848400,19470600,18784200,18774400,19653200,21242600,18834800,18868800,18462200,18098000,18211600,19367800,20742800,18762000,18738000,18249600,18001600,18234400,19228200,20551600,19084200,19204600,19331800,19235600,18789800,19783000,20253000,20858800,20679600,20483200,20695800,20676000,21407600,23004600,22544800,22397600,22540600,22594800,22962600,23580800,23441600,23028200,23179200,23496800,22729200,23086200,22961000,23396400,22557200,22907400,23239000,22632800,22261200,23621600,24424200,23286600,22865400,22802600,22799400,22745400,22599800,24371000,23400200,24004200,24141000,23751000,22954000,22941400,23675000,23115600,23478800,22618800,22171600,21867600,22016200,22925600,24285600,23554800,25214800,22918800,22629200,23121600,24037200,22052600,21490000,20981000,21275000,21153200,21562000,22737000,20606400,20894400,20349200,20001800,20993600,21822600,23157400,20812400,20631600,20920000,20787600,20625600,21468200,23499200,21612800,21550000,21703600,21410600,22272400,22455600,23961000,22611600,23301400,22674600,21071000,24589200,23748400,22198400,21311200,22167400,23862400,23883200,22336800,21860800,21619000,21934000,23330600,23336400,19579600,22230200,22727600,22706600,21370000]],"types":{"y0":"bar","x":"x"},"names":{"y0":"Views"},"colors":{"y0":"#64ADED"}};

/***/ }),

/***/ "./data/chart5.json":
/*!**************************!*\
  !*** ./data/chart5.json ***!
  \**************************/
/*! exports provided: columns, types, names, colors, percentage, stacked, default */
/***/ (function(module) {

module.exports = {"columns":[["xy0",34310,38260,47440,42460,43740,43770,41720,35440,39770,42420,45930,42840,42080,41300,33430,34690,44450,41780,33570,40180,38560,33220,27930,44050,35100,47290,46580,43240,34810,39960,45820,43680,44660,46050,43560,32970,42450,47550,50150,45430,44740,41950,30010,38770,45030,50130,42960,43090,39330,35630,41110,46810,48720,49340,45190,38450,31440,37730,42390,48980,49870,43060,44800,32470,38350,46770,49570,49110,50510,43630,37390,42040,49600,49120,44440,48430,47780,39650,37610,47430,49810,47090,47960,42390,31880,38090,43410,47620,48660,49410,48980,33870,39340,52190,48170,48830,49110,44620,29840,34750,52870,44890,48690,50820,41630,32840,33220,45130,48770,40130,42330,39850,30770,30490,42370,44410,42050,45240,37590,28220,28460,43830,35120,37970,38080,33960,31170,33140,35170,31390,23890,35030,29560,27300,29170,41540,38970,40210,40290,42360,33160,37040,45390,43470,45240,48290,45280,39430,37240,46040,53750,52340,56740,48730,32760,35940,57580,48800,44720,47330,40000,37190,44400,53920,48080,42060,45650,41430,34950,35300,50860,44030,46780,43890,38240,29930,36670,43530,46970,47220,45550,38840,34260,39740,41650,45770,47930,44510,42120,20810,35470,41790,45670,44380,42660,40320,32480,40190,47830,47030,47340,42530,42240,37300,38980,49190,45440,37440,34270,46220,33960,44960,45250,43860,44340,44010,41790,34410,43200,46130,48550,43810,45360,50150,35320,39170,48970,48150,47340,48960,39830,32340,37610,49160,45110,41230,44360,44180,33100,37630,47340,46860,47800,43470,39480,36760,38750,46680,42040,41890,43630,39920,30640,37680,42650,42410,39520,38680,33620,26190,31120,31710,24600,29640,35580,33250,29090,31260,20900,25900,39520,38410,38970,37370,32060,41190,42710,42410,44490,42680,33690,38400,42230,44920,41980,42120,40250,35550,37400,48750,44870,45750,44020,41510,30420,37770,48420,42870,47080,47870,41520,33120,39320,52990,44150,49360,42200,42290,29470,41270,47010,42710,44330,39960,40600,30710,33290,44720,43690,42740,40440,40440,32720,37030,42310,42630,38830,39250,36590,26960,29320,41210,40850,40130,40860,38760,29040,33270,44720,44170,43990,42110,40370,30110,30340,46630,42680,41700,41820,43800,31090,33950,46700,43480,44790,41260,40460,28270,32880,42010,43890,45990,42250,39450,28870],["y1",13730,13690,15220,13820,13080,13870,13300,11290,14240,15260,15150,14600,13690,14460,12750,13510,15220,15070,12730,15170,14140,12650,11480,13980,14500,15550,15590,15470,14040,14770,16590,14470,14840,14910,14490,13380,14410,14170,14800,15700,15180,14010,13020,14750,14950,14350,14710,15120,14070,12520,14680,15510,14200,15610,15180,14540,11940,15190,16180,15670,13830,14800,14560,12850,13800,14890,16190,15610,15230,14770,13940,15450,15530,16340,16000,16880,15530,13800,14410,15520,16630,14890,14660,15540,14100,15960,15950,16010,16150,15500,13800,14030,14520,16270,16110,15870,15270,15810,13670,15600,16290,15610,16060,16400,16340,13810,14920,16820,16950,17530,17490,17050,14650,15670,19000,18680,18240,18210,17680,16420,16190,16760,16580,18300,20560,18760,16440,17800,18270,21800,16760,18260,18150,18100,18210,20350,20730,22270,21910,19380,17800,20190,19540,19730,19530,19810,21450,17920,19850,21320,22400,22700,22810,20180,19140,21540,21730,21580,22800,23640,19150,22070,22740,20730,23820,21880,22700,22450,21120,21180,24150,20920,23890,21320,22110,20860,21190,22710,22170,23680,23590,23760,23170,22360,24520,23830,24690,26700,22220,14530,22920,26310,24840,24910,27490,24910,23330,28350,29540,29300,28910,30530,27710,26870,31170,34050,32040,28070,31970,32860,30500,35250,34900,35680,34820,36470,36600,31880,37310,38540,37510,36470,37070,33790,32550,34480,35660,34840,35070,34430,33800,29450,32910,37250,34730,33970,33660,32470,29670,32120,35610,33620,35090,32780,30180,26990,32680,35540,33250,33070,31350,31500,29800,29620,32630,32060,31030,31850,31040,29000,31410,30880,34180,31390,31410,33940,30190,29970,27620,28530,31660,35190,34050,33360,33250,32930,33570,32310,31930,32520,31000,34450,35120,33320,32760,32310,32110,30030,32290,32180,34510,34630,33840,32850,29680,32390,35360,32350,33910,32170,31140,25910,31100,33070,31630,32140,32980,31910,26510,28700,32450,30350,30620,28170,27090,24020,26210,30630,30010,29060,28280,27480,25640,27380,31170,30140,29880,27080,27190,26540,26100,28950,28390,29580,28430,27180,26900,27890,30370,29010,37710,31070,28200,24050,29250,30280,30940,30400,29590,27840,25070,28680,30740,28600,30670,30550,28430,26900,27170,29890,30590,33270,31990,30770,27010],["y2",10200,11610,11210,11800,11010,10980,12360,9040,11290,10530,10530,9160,8920,10140,8700,8320,9860,9330,7450,9840,8710,6850,6500,8840,7640,8690,7730,7990,8020,7160,9640,7810,9740,8010,10200,7060,6570,8240,8260,8390,9060,7860,8050,6180,8160,8020,9000,8300,7980,6450,6700,7870,7820,7330,8520,8010,6940,7800,8480,8430,7360,7010,7310,6680,5940,7100,6890,8810,6600,7580,5680,6710,8530,9210,6170,6940,7760,6120,5890,9590,6340,6450,8990,7720,7650,6330,8120,7200,7620,8010,5930,8830,7360,8020,6730,7360,7870,8170,6520,6500,6820,9860,7160,7960,7270,6420,5610,7340,7070,6480,7090,6960,6440,5830,7230,8080,6980,7660,9220,5980,4930,6880,6920,6910,7140,6030,5800,7240,8090,5640,5530,6520,6230,6210,6200,8850,8430,9310,8930,8140,7330,7770,7820,7380,8020,7310,6790,6980,6910,8800,7250,9200,8440,8230,6710,7710,8430,7780,7290,9210,8000,8170,7140,8060,7360,6840,7850,6650,6150,7120,8510,9020,9750,9200,9320,7500,6820,8560,9350,9020,8150,8610,6740,8500,8330,7170,8790,7090,6870,4910,7700,8490,9190,10100,7720,7850,8530,7970,9480,8170,9900,9190,8690,10060,10280,10930,9470,9840,11210,11240,7870,10100,11280,10970,11100,10590,10920,8850,9130,11280,10410,10530,10560,10150,11230,8580,9660,10010,10990,10560,7710,7710,9290,10680,9030,8690,9440,8860,7170,9130,10090,9080,9240,9090,8760,8070,8520,9110,9240,9110,9500,9080,7810,9090,10110,9700,10770,9580,8390,8100,7840,9530,9590,8820,9140,9580,9610,8950,7980,8180,9920,9730,9940,8990,9600,9830,9680,9840,8840,9030,9090,10470,9820,10730,9900,10470,11100,7790,10320,10060,11450,10110,10020,10170,10540,11910,11290,11040,9940,10240,9850,9610,9920,10440,10880,10290,9930,10560,10560,9590,11160,10660,10540,9800,9490,9350,9440,10260,11180,9980,9590,9240,8560,9170,9290,9370,9420,10210,9640,8780,11220,10440,9800,10500,10420,9840,8990,9410,10860,10710,13840,13700,10680,8830,11480,12140,11130,13350,11750,9780,9150,9820,11100,10890,11930,10630,10490,8880,11000,11480,12160,10660,11210,10410,9850],["y3",2000,2540,3540,3380,3190,3530,3190,2160,2520,3770,3360,3300,3130,2810,1710,2210,3490,3370,2270,3070,2870,1750,1430,2340,2210,3470,3380,3470,2150,2210,3540,3450,3280,3360,2890,2130,2250,3940,3480,3380,3470,2920,1920,1950,3600,3440,3450,3540,2940,2070,2050,3430,3610,3290,3320,2770,1880,2280,3690,3360,3490,3060,3120,2080,2220,3390,3290,3580,3330,3160,2160,2140,3290,3010,3540,3280,3060,2350,2490,3260,3430,3160,3860,2730,1890,2300,3050,2940,3150,3380,2840,1870,1940,3020,3050,3310,2960,2760,1730,2330,3610,3390,2790,2930,2840,1750,1910,2990,3190,2620,2940,2190,1580,1490,2430,2490,2350,2270,2030,1240,1510,2550,2100,1900,2290,1770,1450,1560,1790,1670,1110,2060,1530,1600,1620,2470,2760,2390,2260,2200,1690,1590,2630,2580,2500,2780,2280,1810,1970,2880,2970,2830,3030,2910,2150,2150,3090,2950,2850,3120,2540,1830,2290,3110,3210,2950,2670,2940,1800,1820,3130,3180,3690,3030,2940,1780,2080,3120,3470,3220,3240,3140,2080,2510,3300,3260,3390,3490,2970,1780,2260,3610,3280,3540,3620,3020,2110,2360,3120,3420,3440,3430,3050,2630,2670,4080,3320,2980,2400,2920,2240,2010,3290,3880,3480,3180,3750,2200,3050,3160,3590,2890,3580,3510,1790,2610,3930,3540,3660,3280,2900,2100,2580,3660,4100,3340,3590,3050,2390,2360,3880,3870,3910,3230,2690,1990,2280,3710,3540,3350,3150,2870,2290,2280,3230,3520,2990,2590,2390,1890,2170,1950,1360,2060,2650,2430,1920,1820,1400,1540,2900,3080,3560,2360,2710,3960,3900,3660,4000,3550,2930,3770,4240,4490,4760,4160,3410,2350,3210,3420,3980,4010,4000,4150,2390,3060,3830,4060,3700,3510,3530,2380,2430,3640,4550,3700,3310,3870,2130,2480,3650,3820,4180,3500,3380,1970,2640,3970,3800,3830,3400,3110,1820,2370,3860,3650,3650,3620,3270,2100,2440,3520,3290,3470,3210,3210,2020,2360,3910,3700,3650,3200,3250,2220,2420,4010,3870,3620,3620,3010,2410,2530,3820,3630,3870,3510,3190,1880,2460,3500,3750,3880,4140,3320,2260],["y4",5480,5930,10490,9460,11790,9530,9690,5500,5810,8090,9510,8830,8350,8490,5130,5550,9110,9850,5800,8930,8280,4540,4350,6630,4490,9810,9130,8680,5040,5120,9100,9520,8670,10550,8860,5140,5050,9510,10390,10290,10130,9700,4150,5270,9790,9670,9120,10030,9790,5250,5530,9280,9610,9870,9580,9410,4700,6340,10490,10390,10850,9680,8600,4920,5050,10960,10680,10500,10070,8270,5410,5730,10780,10250,10470,9690,9640,5080,5630,10050,11060,8290,9540,8070,5380,5310,9710,9750,10760,9870,9080,5030,6720,9830,10500,9190,9550,9580,6040,6360,10720,9090,10170,9570,9750,4810,5280,9420,9310,8830,9050,8400,4480,3990,7880,8890,8320,8770,7420,5210,3960,7940,7750,8310,8070,6670,4590,4500,6150,5190,3850,5940,6310,4300,4370,9240,7760,7810,7700,7790,4380,4990,8640,9060,8870,9760,8780,6250,6250,10460,10520,10970,10430,9440,5390,5270,10630,10740,10160,10030,9180,4620,5290,9080,11090,9930,10520,9910,5120,5360,9810,9170,9120,10310,8460,4200,4390,9770,9800,10000,9530,9130,4830,4820,9390,8900,8820,9390,8480,3240,4990,9510,9060,8840,9480,8970,4800,5620,9750,10350,9890,9510,9170,5790,6960,10760,9780,8790,6010,8560,5550,5710,9910,9130,9630,10250,9720,4930,6080,9760,10140,8950,10930,9040,5390,6260,9570,10320,9450,10200,8570,5630,5230,10030,10220,9690,10240,9500,5680,5970,9350,9710,9090,9760,8630,4730,5930,9900,10220,9480,8960,7940,5080,4910,9060,8490,10270,9200,7350,4800,5420,4580,3820,4200,6850,7120,5040,4870,4070,3590,7720,7710,7330,5230,5980,8450,10610,9030,9480,8870,5010,5210,10050,9270,9770,9290,9480,5280,4770,9320,10050,9310,9650,8280,4880,5350,10050,9730,9880,10130,9120,5140,5840,9820,9870,9770,8920,9010,4810,5480,10440,9540,9450,9540,9390,5380,5460,10590,9370,10240,9790,9370,5140,5630,9530,9240,9440,9760,8500,4900,4850,9890,8650,9450,9820,8880,5050,5000,9100,9690,9630,9870,8570,4840,5130,9910,9760,9930,10210,9010,4990,5580,10040,10630,10260,10610,8240,5080,4530,10140,9920,9670,10590,10600,4970],["y5",4770,4760,4910,5490,5560,5270,4900,4520,5420,5750,5640,5290,5090,5670,4290,4160,4990,5170,4380,5370,5840,4710,3600,4560,4640,5000,4660,4800,3900,6400,4150,5100,5190,5950,4670,3940,4070,4490,4750,4760,4910,4730,3780,3760,4860,4730,4960,4330,5320,4700,4390,5570,5470,4330,4250,4070,3500,3790,5020,4630,5070,3930,4360,3470,3730,4130,4910,4670,4100,4240,3660,3360,4430,4090,3860,4180,4420,3540,4120,4180,4330,4000,4450,3460,3090,3600,3720,4190,3890,3900,4340,3150,3210,3940,4150,4310,4300,3600,3380,2970,3320,3520,3570,4010,3400,3210,3130,3670,3740,3790,2910,3230,2280,3030,2770,3310,3640,3050,3090,2810,2880,3470,3120,3270,3140,2460,2950,2690,3000,2950,2430,3210,3500,2230,2620,3030,3010,3150,3110,3170,3680,3020,3380,2600,3180,3240,3690,3150,3200,2860,3320,3290,3200,3240,2760,3100,3660,3180,4120,3110,4100,2950,2360,3590,3320,3410,3220,3200,2510,2800,3490,3050,2830,3100,3000,3030,2800,3670,2890,3320,2640,2660,2410,2720,3370,3230,3070,2920,3010,2240,2510,2970,2750,2560,2700,2630,2660,2700,2890,3030,2430,3300,3700,2830,3010,2990,2850,2850,3290,2400,2890,3000,2640,2900,2970,2980,2430,2450,2960,2990,2940,2950,2900,2670,2300,2610,2670,2760,2440,2960,2740,2290,2820,2330,2690,2420,2780,2110,2180,2040,2740,2960,3230,2880,2680,2180,2380,2560,2890,2540,2660,2450,2440,2450,2590,2930,2960,3030,2380,2220,2390,2520,2650,2490,2590,2450,2200,2340,2150,2520,2140,2100,2240,2150,2770,2740,2240,2080,2480,2090,2230,2180,2390,2390,2670,2920,1960,1910,2420,2180,2860,2800,2460,2700,2360,2320,2750,2520,2690,2580,2270,2370,2190,2440,2120,2360,2110,2170,2200,2370,2110,2280,2410,2640,2240,2380,2090,2620,2570,2510,2320,2390,1970,2190,2340,2340,2310,2290,2450,1960,2140,1930,2400,1980,2290,2160,1840,1700,2110,2540,2390,2150,1800,1990,2130,2040,1910,1740,2290,2030,1820,2090,2200,2340,2010,2200,2030,2340,1630,2010,1910,1980,1970,1640,1660]],"types":{"y0":"area","y1":"area","y2":"area","y3":"area","y4":"area","y5":"area","x":"x"},"names":{"y0":"Apples","y1":"Oranges","y2":"Lemons","y3":"Apricots","y4":"Kiwi","y5":"Mango"},"colors":{"y0":"#3497ED","y1":"#2373DB","y2":"#9ED448","y3":"#5FB641","y4":"#F5BD25","y5":"#F79E39"},"percentage":true,"stacked":true};

/***/ }),

/***/ "./data/chart_data.json":
/*!******************************!*\
  !*** ./data/chart_data.json ***!
  \******************************/
/*! exports provided: 0, 1, 2, 3, 4, default */
/***/ (function(module) {

module.exports = [{"columns":[["xy0",37,20,32,39,32,35,19,65,36,62,113,69,120,60,51,49,71,122,149,69,57,21,33,55,92,62,47,50,56,116,63,60,55,65,76,33,45,64,54,81,180,123,106,37,60,70,46,68,46,51,33,57,75,70,95,70,50,68,63,66,53,38,52,109,121,53,36,71,96,55,58,29,31,55,52,44,126,191,73,87,255,278,219,170,129,125,126,84,65,53,154,57,71,64,75,72,39,47,52,73,89,156,86,105,88,45,33,56,142,124,114,64],["y1",22,12,30,40,33,23,18,41,45,69,57,61,70,47,31,34,40,55,27,57,48,32,40,49,54,49,34,51,51,51,66,51,94,60,64,28,44,96,49,73,30,88,63,42,56,67,52,67,35,61,40,55,63,61,105,59,51,76,63,57,47,56,51,98,103,62,54,104,48,41,41,37,30,28,26,37,65,86,70,81,54,74,70,50,74,79,85,62,36,46,68,43,66,50,28,66,39,23,63,74,83,66,40,60,29,36,27,54,89,50,73,52]],"types":{"y0":"line","y1":"line","x":"x"},"names":{"y0":"#0","y1":"#1"},"colors":{"y0":"#3DC23F","y1":"#F34C44"}},{"columns":[["xy0",6706,7579,7798,8307,7866,7736,7816,7630,7536,7105,7178,7619,7917,7483,5772,5700,5435,4837,4716,4890,4753,4820,4538,12162,39444,25765,18012,14421,13249,11310,10377,9399,8917,8259,7902,9442,47596,36160,23866,18500,15488,13722,12270,13413,10574,7092,7159,7880,8821,8306,7780,7963,7837,7611,7334,7413,7015,6742,6557,6593,6680,6725,6345,5988,6365,9911,28833,19694,14873,11911,10498,9708,8893,8365,7960,7694,45529,42858,31508,23289,19147,15874,14551,13124,11778,10809,10522,9918,9436,8617,8765,8194,8035,7865,7573,7422,7047,7147,6861,6669,6363,12073,32381,21390,15311,12819,11655,10696,9678,9143,8296,7852],["y1",3522,4088,4146,4477,4202,4157,4177,4203,4223,3948,3946,3898,3979,4052,3279,3229,3302,3040,3054,2982,3077,2965,2973,5148,22485,13077,9055,7446,6824,5995,5787,5367,4997,4689,4630,4785,22365,15244,10626,8666,7681,6929,6219,6367,5402,4932,4844,5146,5265,4887,4714,4722,4718,4693,4746,4819,4455,4419,4323,4407,4277,11589,6100,5076,4769,8929,14002,9756,7520,6343,5633,5415,5052,4850,4624,4480,14102,24005,14263,10845,9028,7755,7197,7001,6737,6254,6150,5922,5603,5048,5423,5003,5035,4747,4814,4661,4462,4516,4221,4111,4053,12515,15781,10499,8175,6831,6287,5990,5590,5148,4760,4809]],"types":{"y0":"line","y1":"line","x":"x"},"names":{"y0":"#0","y1":"#1"},"colors":{"y0":"#3DC23F","y1":"#F34C44"}},{"columns":[["xy0",4747,4849,5045,5184,5746,5400,5424,5576,6436,5337,4840,5379,4678,4736,5074,4897,4349,5089,4543,5033,5047,4871,4812,4723,4545,4723,4721,4384,4277,4682,4805,4001,4610,5241,5113,4059,4529,4673,5291,5154,5123,5535,5540,5161,5666,5584,6999,6854,5083,5361,5863,5792,5586,6106,5481,5532,5853,5809,6244,6156,5596,5426,5422,5413,4795,5113,5279,5530,4939,4983,4984,5527,5765,5001,5818,6061,5956,5288,5837,5703,5440,5238,5957,6432,6389,6064,7065,5981,5779,6567,6320,5634,6023,5702,6066,5797,6163,6182,4906,5637,7073,6679,5831,6015,6266,6128,6156,6218,6050,6140,5877,7147],["y1",4605,5036,4956,5168,5008,5069,5223,5360,5695,5209,4796,5028,4931,5123,4987,4964,4982,5037,5050,5144,5049,4971,4911,4792,4562,4597,4759,4761,4646,4543,4597,4428,4213,4270,3961,4784,4699,4711,4855,4717,4563,4923,5041,4895,4877,5001,5410,5033,5045,5184,4976,5207,5354,5205,4887,4831,5083,5148,5369,5176,5022,4880,4969,5135,4836,4764,4782,4783,4646,4755,4744,4932,5059,4851,4614,4718,5018,5034,5223,5007,4839,4763,4761,5048,5330,5106,5956,5135,5006,4919,5511,5114,5122,5314,5089,5022,4918,4986,4626,4675,4951,4921,5173,5145,5209,4967,5030,5120,5030,4946,4795,5224]],"types":{"y0":"line","y1":"line","x":"x"},"names":{"y0":"#0","y1":"#1"},"colors":{"y0":"#3DC23F","y1":"#F34C44"}},{"columns":[["xy0",41,31,62,65,66,79,52,26,42,68,71,86,65,54,33,70,52,68,75,92,69,28,33,84,65,56,42,44,26,34,45,49,83,83,66,31,43,55,57,55,54,45,51,64,27,19,38,38,44,49,42,50,60,73,86,65,51,54,48,61,82,83,53,52,48,64,96,103,68,73,58,42,81,80,76,106,93,65,69,104,75,79,92,73,49,63,76,79,83,70,55,47,42,111,93,74,99,107,52,65,80,82,74,154,106,39,40,77,85,66,52,25],["y1",19,10,36,41,28,39,24,16,14,40,39,37,47,28,16,32,25,29,36,45,38,11,25,37,35,22,25,30,16,20,32,34,37,26,31,10,19,32,34,23,25,22,21,18,11,18,18,23,11,18,22,19,27,27,30,25,27,23,28,30,23,31,27,16,30,21,36,33,25,34,16,24,37,33,26,24,31,21,37,32,35,31,30,27,15,17,38,40,32,34,30,17,21,28,36,30,24,25,20,24,22,42,34,47,40,29,29,31,39,30,29,18]],"types":{"y0":"line","y1":"line","x":"x"},"names":{"y0":"#0","y1":"#1"},"colors":{"y0":"#3DC23F","y1":"#F34C44"}},{"columns":[["xyyy2",820900,766050,894390,894540,887590,814490,786610,744660,770920,930330,930190,942060,933690,922280,810770,809760,952010,959070,957020,955890,948250,825710,804970,958480,959090,970200,907010,950150,825240,820890,971020,973560,967940,960360,931820,795020,753860,808740,970000,981020,979810,975840,829690,819300,992290,998040,1006540,1013790,995130,848190,851890,1024210,1032210,1032290,1027510,1010090,850110,741740,844400,850410,1006690,1018470,1011630,916990,861050,1039650,1032640,904200,1045560,1022330,888970,896300,1073460,1074860,1074820,1074880,1057340,909410,906710,1078860,1092760,1083360,1078680,1067310,903090,858360,947540,1089590,1095060,1093130,1070660,915380,916530,1108410,1109460,1097230,1094520,1074630,915520,915750,1101730,1104580,1107930,1116850,1106360,928500,928210,1110530,1103230,1099970,1106180,1096060,982050,932620,1100880,1099970,1080040,959480,951360,902160,916070,1094120,1092530,1089290,1081760,1073320,937320,900010,1084910,1082620,1080960,1074050,1077810,925090,913970,1082900,1089240,1088890,1088720,1084170,938750,904060,1091540,1093660,1104520,1085860,1091880,939720,919790,1098590,1110310,1105580,1105220,1096580,940670,923480,1102360,1102760,1102280,1108680,1109210,955490,944730,1125380,1127440,1123070,1123910,1121160,966340,946940,1141980,1146790,1147420,1132920,990870,946370,964610,1171550,1187000,1186370,1199100,1213000,1062280,1035740,1274070,1276740,1280670,1282770,1257200,1085370,1080510,1293120,1308880,1302170,1317570,1298110,1111780,1106410,1317620,1318010,1332680,1328530,1305330,1113540,1119830,1340410,1348770,1346910,1352950,1324040,1139450,1136680,1355970,1364950,1377510,1375770,1338490,1140310,1151830,1374520,1374330,1378990,1372390,1347390,1135560,1121640,1217410,1390340,1392710,1383070,1372400,1170430,1169550,1404540,1412720,1414110,1417200,1388240,1194260,1188850,1416140,1425890,1426380,1410520,1388600,1197940,1197680,1432620,1448350,1436320,1438890,1412650,1222040,1215220,1454190,1456740,1490670,1470910,1438940,1243620,1241210,1483460,1489950,1488440,1482490,1465050,1261450,1281800,1552680,1527050,1526500,1511360,1497560,1302860,1292930,1547830,1550610,1546490,1547790,1525750,1324580,1321580,1576620,1575060,1570240,1574670,1543830,1341780,1341710,1577840,1565630,1580460,1569570,1543390,1431880,1301600,1401500,1401040,1530910,1526670,1498750,1383070,1284000,1401510,1189880,1309810,1380230,1383630,1254140,1216830,1243860,1442240,1481680,1480680,1490700,1315410,1300930,1530520,1532340,1539150,1541510,1532770,1344910,1325530,1563330,1568490,1580110,1575130,1564880,1369810,1359060,1608230,1605640,1605970,1601640,1590810,1381740,1375190,1625850,1621800,1629910,1628510,1609760,1397880,1392180,1647700,1646770,1644200,1667150,1610910,1408450,1395010,1652870,1658870,1660310,1659060,1629490,1435450,1407720,1675610,1682450,1682070,1693010,1669030,1448500,1439490,1710110,1702690,1707000,1662770,1512800,1101660],["y3",409540,377260,456380,460230,452020,389350,397230,369000,382180,473570,477470,477550,478030,466150,397480,406380,494570,494680,482810,487700,475090,400520,397940,484160,487740,493260,434500,475410,398650,404690,491980,493410,485250,484740,465490,377460,353960,396390,493300,497560,495110,485260,394770,402910,500540,506260,509680,514010,494350,405360,412560,513030,521320,515730,518170,499850,394960,328510,406450,408080,501980,507800,496990,442530,414260,525770,513440,442660,526810,500190,426220,436110,546820,543480,545420,540530,527770,431050,443100,549550,551600,548120,542290,528810,435370,407250,463200,553640,554110,555820,536470,440460,447740,563330,561850,556430,550910,539440,441200,442310,563100,563760,559230,570870,555280,447750,455570,564630,562510,556050,555560,556470,484080,451320,561060,553630,540660,473500,472500,438550,447590,548670,549580,539920,541510,540380,450260,432260,535950,545160,543810,536990,539680,446570,444470,543450,549070,547840,541430,540200,450080,431800,549290,545890,556300,536500,543890,450890,440180,550850,554740,553460,553440,546420,446710,436640,553270,547750,551920,547610,545500,449220,447510,560050,561560,561560,556630,559340,461630,456300,569070,574800,575220,566180,472200,450530,462960,590290,597250,592970,604870,613050,512200,495980,649860,645070,636950,647120,630390,518820,525990,661700,659770,660650,669560,644510,529610,539520,673850,668530,673770,669480,654540,536090,548400,690100,684900,687040,685940,666360,560140,553050,696740,694490,703000,697980,674460,548230,557370,697150,700110,701170,695810,669780,543500,540170,597430,711500,699770,698520,682170,568380,572950,715580,716050,720770,720660,695220,572970,578170,722280,724280,727910,719820,699840,580870,586270,729850,733680,726590,731270,709330,593070,600500,743590,743690,767660,747140,730510,607540,610480,762440,772960,763480,758490,741090,614450,645760,831130,792100,780410,778620,761000,643620,650320,802640,805900,803960,800580,783660,648310,668150,825940,818650,816630,821000,782790,657850,671660,817660,816020,821380,816280,800240,712510,648060,711170,709110,802240,792710,772260,691490,636050,649450,566120,651310,701910,702270,627880,605290,621710,744830,762830,765640,764140,648720,642430,786580,778790,780060,789170,772600,652160,648950,795360,802250,808010,801890,793490,669240,665310,814370,810880,814580,813950,802070,670450,674250,823010,820620,821400,820760,804300,681870,681460,831580,835600,835390,840770,810700,675170,680870,832000,836790,845630,844560,821810,690310,683810,851150,848090,846480,858340,831290,696470,695540,866980,868190,861720,834530,706650,439140]],"types":{"y0":"line","y1":"line","y2":"line","y3":"line","x":"x"},"names":{"y0":"#0","y1":"#1","y2":"#2","y3":"#3"},"colors":{"y0":"#cb513a","y1":"#73c03a","y2":"#65b9ac","y3":"#4682b4"}}];

/***/ }),

/***/ "./src/animations.js":
/*!***************************!*\
  !*** ./src/animations.js ***!
  \***************************/
/*! exports provided: main, AnimatedValue, AnimatedArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "main", function() { return main; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimatedValue", function() { return AnimatedValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimatedArray", function() { return AnimatedArray; });
const FREQ = 50;

function main() {

  var myValue = new AnimatedValue(3, 0.5);

  console.log(myValue);
  myValue.set(4);
  myValue.animate(6, 1);
  console.log('===========', myValue);

}

function AnimatedValue(value, duration) {
  duration = duration || 0.5;
  this.value = value;
  this.duration = duration * 1000;
  this.ease = function(t) {
    return t*(2-t);
  }
}
// AnimatedValue.prototype.set = function(newValue, now=performance.now(), animated=false) {
AnimatedValue.prototype.set = function(newValue, now, animated) {
  now = now || performance.now();
  animated = animated || false;
  // console.log('anim set', newValue);
  if (!animated) { this.value = newValue;return; }
  if (newValue === this.toValue) { return; }



  if (isNaN(this.value)) {
    return;
  }

  this.started = now;
  this.from = this.value;
  this.to = newValue;
  this.nextTick(now);
}
AnimatedValue.prototype.nextTick = function(now, name) {
  if (this.started) {
    var p = (now - this.started)/this.duration;

    // if (name) {
    //   console.log('next tick', name);
    //   console.log(this.value);
    // }

    if (p > 1) p = 1;
    if (p < 0) p = 0;
    this.value = Math.round((this.from + (this.to - this.from) * this.ease(p))*100)/100;

    if (p === 1) this.started = false;
    return true;
  }
  else {
    return false;
  }
};

function AnimatedArray(values) {
  this.values = values;
}
AnimatedArray.prototype.nextTick = function(now) {
  var res = false;
  for (var i = 0; i < this.values.length; i++) {
    if (this.values[i].nextTick(now)) {
      res = true
    }
  }
  return res;
};

// export function AnimatedValue(value, duration=0) {
//   this.value = value;
//   this.duration = duration * 1000;
//   this.isAnimate = false;
// }
//
// AnimatedValue.prototype.set = function(newValue, duration=0) {
//   this.value = newValue;
// }

// AnimatedValue.prototype.animate = function(newValue, duration) {
//   this.from = this.value;
//   this.to = newValue;
//   if (duration) this.duration = duration*1000;
//   this.isAnimate = true;
//
//   var i = 0;
//   var interval = setInterval(() => {
//     if (this.value === this.to) {
//       clearInterval(interval);
//       // if (this.cb) this.cb();
//       this.isAnimate = false;
//       return;
//     }
//     i++;
//     var p = i / (this.duration / FREQ);
//     if (p > 1) p = 1;
//     // TODO Easing here
//     this.value = this.from + (this.to - this.from) * p;
//     // console.log(this.value);
//   }, FREQ);
// }
// export function createAnimationStack() {
//   return {
//     anims: [],
//     add: function(from, to, duration=1, cb) {
//       var a = createAnimation(from, to, duration);
//       a.cb = function() {
//         this.remove(a);
//       }.bind(this);
//       this.anims.push(a);
//     },
//     remove: function(a) {
//       if (this.anims.indexOf(a) !== -1) {
//         this.anims.splice(this.anims.indexOf(a), 1);
//       }
//     },
//     play: function() {
//       for (var i = 0; i < this.anims.length; i++) {
//         this.anims[i].play();
//       }
//     }
//   };
// }

// AnimatedValue.prototype.animate = function(newValue, duration) {
//   this.from = this.value;
//   this.to = newValue;
//   if (duration) this.duration = duration*1000;
//   this.isAnimate = true;
//
//   var start = performance.now();
//
//   function update() {
//     var p = (performance.now() - start) / this.duration;
//     if (p > 1) p = 1;
//     //TODO Eading here
//     this.value = this.from + (this.to - this.from) * p;
//     // console.log(this.value);
//     if (p < 1) requestAnimationFrame(update.bind(this));
//   };
//   requestAnimationFrame(update.bind(this));
// }

// function animateArray(fromA, toA, duration, cb, onFinishCb) {
//   var start = performance.now();
//
//   var A = fromA;
//   function update() {
//     var p = (performance.now() - start) / (duration*1000);
//     if (p > 1) p = 1;
//     A = fromA.map((a, i) => a + (toA[i]-a)*p);
//     cb(A);
//     if (p === 1) {
//       if (onFinishCb) onFinishCb();
//       return;
//     }
//     requestAnimationFrame(update);
//   }
//   requestAnimationFrame(update);
// }


/***/ }),

/***/ "./src/charts/bar-chart.js":
/*!*********************************!*\
  !*** ./src/charts/bar-chart.js ***!
  \*********************************/
/*! exports provided: barChart, BarChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "barChart", function() { return barChart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BarChart", function() { return BarChart; });
/* harmony import */ var _chart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart */ "./src/charts/chart.js");
/* harmony import */ var _animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../animations */ "./src/animations.js");
/* harmony import */ var _point_info__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./point-info */ "./src/charts/point-info.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ "./src/utils.js");
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../consts */ "./src/consts.js");






function barChart(container, data, name) {
  var chart = new BarChart(container, data, name);
  return chart;
}

function BarChart(container, data) {
  console.log(data);
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].apply(this, arguments);
  this.L++;
  this.init();
}

BarChart.prototype = Object.create(_chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype);
BarChart.prototype.constructor = BarChart;

BarChart.prototype.updateDateRange = function () {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.updateDateRange.call(this, this.startInd, this.endInd-1)
}

BarChart.prototype.initData = function() {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.initData.call(this, 150);
}

BarChart.prototype.calculateOxLabelsOffsetX = function () {
  this.oxLabelsOffsetX = this.offsetX + this.barWidth/2 - this.labelWidthHalf;
};

BarChart.prototype.calculateValuesMaxY = function() {
  return Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getMax"])(this.columns[0].values.slice(Math.max(0, this.startInd-1), this.endInd+1));
}

BarChart.prototype.drawPreview = function() {
  this.ctx.clearRect(this.previewChartX, this.previewChartY, this.previewChartWidth, this.previewChartHeight);

  this.ctx.beginPath();
  this.ctx.globalAlpha = 1; // FIXME Alpha to const
  this.ctx.fillStyle = this.columns[0].color;

  var X = [];
  for (var i = 0; i < this.oxLabels.length; i++) {
    X.push(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenXByInd"])(i, this.previewChartStep, this.previewChartX));
  }
  var max = Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getMax"])(this.columns[0].values);
  var Y = Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getYCoords"])(this.previewChartHeight, this.columns[0].values, max).map(y => this.previewChartY + y);

  var barWidth = X[1] - X[0];
  for (var i = 0; i < X.length; i++) {
    this.ctx.rect(X[i], Y[i], barWidth, this.h - Y[i]);
  }
  this.ctx.fill();
}

BarChart.prototype.drawSequence = function () {
  this.drawChartContent();
  this.drawBg();
  this.drawSelected();
};

BarChart.prototype.initButtons = function () {};

BarChart.prototype.drawChartContent = function() {
  this.ctx.beginPath();
  this.ctx.globalAlpha = (this.selectedInd > -1) ? 0.6 : 1; // FIXME Alpha to const
  var barW = Math.round(this.barWidth*this.round)/this.round;
  var sI = Math.max(this.startInd - this.drawIndOffset, 0);
  var eI = Math.min(this.endInd + this.drawIndOffset, this.L);

  var X = [];
  for (var i = sI; i < eI+1; i++) {
    X.push(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenXByInd"])(i, barW, this.offsetX));
  }

  var Y = Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getYCoords"])(this.bottomY, this.columns[0].values.slice(sI, eI+1), this.gridMaxY.value);
  for (var i = 0; i < X.length; i++) {
    if (i !== this.selectedInd - sI) {
      this.ctx.rect(X[i], Y[i], barW, this.bottomY - Y[i]);
    }
  }
  this.ctx.fillStyle = this.columns[0].color;
  this.ctx.fill();

  if (this.selectedInd > -1) {
    this.drawSelectedChartContent();
  }
}

BarChart.prototype.getIndByScreenX = function (x, step=this.barWidth, offset=this.offsetX) {
  return Math.floor((x - offset)/step);
}

BarChart.prototype.drawSelected = function() {
  if (this.selectedInd >= 0) {
    // this.drawSelectedChartContent();

    this.info.style.left = Math.max(this.selectedScreenX - this.info.offsetWidth - 30, 0) + 'px'; // FIXME this.info margin
    this.info.style.top = Math.max(this.selectedScreenY - this.info.offsetHeight, 0) + 'px';
    this.info.appear();
  }
  else {
    this.info.disappear()
  }
}

BarChart.prototype.drawSelectedChartContent = function () {
  var barW = Math.round(this.barWidth*this.round)/this.round;

  var selectedIndX = this.getScreenXByInd(this.selectedInd);
  var selectedIndY = Math.floor(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenY"])(this.bottomY, this.columns[0].values[this.selectedInd], this.gridMaxY.value));

  this.ctx.beginPath();
  this.ctx.globalAlpha = 1;
  this.ctx.fillStyle = this.columns[0].color;
  this.ctx.rect(selectedIndX, selectedIndY, barW, this.bottomY - selectedIndY);
  this.ctx.fill();
}


/***/ }),

/***/ "./src/charts/button.js":
/*!******************************!*\
  !*** ./src/charts/button.js ***!
  \******************************/
/*! exports provided: createButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createButton", function() { return createButton; });
function createButton(color, text, onClick) {
  var button = document.createElement('button');
  button.name = text;
  button.isOn = true;
  button.classList.add('chart-button');
  button.classList.add('checkmark');
  button.style.backgroundColor = color;

  var i = document.createElement('img');
  i.setAttribute('src', 'check.svg');
  button.append(i)
  button.append(document.createTextNode(text));

  button.onclick = function() {
    button.isOn = !button.isOn;
    if (!button.isOn) {
      // button.style.borderWidth = '0px';
    }
    if (onClick) onClick(button.name, button.isOn);
  };

  return button;
}


/***/ }),

/***/ "./src/charts/chart.js":
/*!*****************************!*\
  !*** ./src/charts/chart.js ***!
  \*****************************/
/*! exports provided: ChartBase, calculateOffsetX, getScreenXByInd, getIndByScreenX, getYCoords, getScreenY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartBase", function() { return ChartBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateOffsetX", function() { return calculateOffsetX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getScreenXByInd", function() { return getScreenXByInd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getIndByScreenX", function() { return getIndByScreenX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getYCoords", function() { return getYCoords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getScreenY", function() { return getScreenY; });
/* harmony import */ var _preview_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./preview-ui */ "./src/charts/preview-ui.js");
/* harmony import */ var _point_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point-info */ "./src/charts/point-info.js");
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./button */ "./src/charts/button.js");
/* harmony import */ var _animations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../animations */ "./src/animations.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ "./src/utils.js");
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../consts */ "./src/consts.js");







function ChartBase(container, data, name) {
  this.container = container;
  this.chartContainer = document.createElement('div');
  this.chartContainer.classList.add('chart');

  this.pixelRatio = window.devicePixelRatio;

  this.w = Math.min(container.getBoundingClientRect().width, _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_MAX_WIDTH"]);
  this.h = 400;

  this.name = name;
  this.chartContainer.style.width = this.w + 'px';
  this.chartContainer.style.position = 'relative';

  this.initHeader();
  this.initCanvas();
  this.initPreviewUI();

  this.previewUILeftX = 0.8; // FIXME Move to chart initial data
  this.previewUIRightX = 1; // FIXME Move to chart initial data

  this.data = data;

  this.info;
  this.round = 1000;

  this.initData();
  this.L = this.oxLabels.length - 1; // FIXME Rename

  this.addListeners();

  container.append(this.chartContainer);
}

ChartBase.prototype.addListeners = function () {
  window.addEventListener('resize', Object(_utils__WEBPACK_IMPORTED_MODULE_4__["debounce"])(this.onResize, 20).bind(this));
}

ChartBase.prototype.switchMode = function (isDay=true) {
  if (isDay) {
    this.previewUI.switchTheme(_consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_DAY_THEME"]);
    this.initColors(_consts__WEBPACK_IMPORTED_MODULE_5__["CHART_DAY_THEME"]);
    this.header.style.color = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_DAY_THEME"].chartTitleColor;
    this.info.style.backgroundColor = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_DAY_THEME"].infoBackgroundColor;
    this.info.style.color = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_DAY_THEME"].infoTextColor;
  }
  else {
    this.previewUI.switchTheme(_consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_NIGHT_THEME"]);
    this.initColors(_consts__WEBPACK_IMPORTED_MODULE_5__["CHART_NIGHT_THEME"]);
    this.header.style.color = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_NIGHT_THEME"].chartTitleColor;
    this.info.style.backgroundColor = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_NIGHT_THEME"].infoBackgroundColor;
    this.info.style.color = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_NIGHT_THEME"].infoTextColor;
  }
  this.draw();
}

ChartBase.prototype.initColors = function (theme) {
  this.gridLinesColor = theme.gridLinesColor;
  this.gridTextsColor = theme.gridTextsColor;
  this.chartTitleColor = theme.chartTitleColor;
};

ChartBase.prototype.initCanvas = function () {
  this.canvas = document.createElement('canvas');
  this.canvas.width = this.w * this.pixelRatio;
  this.canvas.height = this.h * this.pixelRatio;
  this.canvas.style.width = this.w + 'px';
  this.canvas.style.height = this.h + 'px';

  this.canvas.onmouseenter = this.onMouseEnter.bind(this);
  this.chartContainer.append(this.canvas);
  this.ctx = this.canvas.getContext('2d');
  this.ctx.scale(this.pixelRatio, this.pixelRatio);
}

ChartBase.prototype.onActionUpdate = function(action) {
  this.previewUIState = action;
  this.startUpdate();
}

ChartBase.prototype.initPreviewUI = function () {
  this.previewUI = Object(_preview_ui__WEBPACK_IMPORTED_MODULE_0__["preview"])(this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2, _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_HEIGHT"], this.pixelRatio, this.onActionUpdate.bind(this));
  this.previewUI.style.position = 'absolute';
  this.previewUI.style.top = this.h - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_INNER_MARGIN_TOP"] + 'px';
  this.previewUI.style.left = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"] + 'px';

  this.previewUIState = null;

  this.chartContainer.append(this.previewUI);
}

ChartBase.prototype.updateWidth = function() {
  this.canvas.width = this.w * this.pixelRatio;
  this.canvas.height = this.h * this.pixelRatio;
  this.canvas.style.width = this.w + 'px'
  this.ctx.scale(this.pixelRatio, this.pixelRatio);

  this.previewUI.updateWidth(this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2, this.pixelRatio);

  this.header.style.width = this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2 + 'px';
  this.gridWidth = this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2;
  this.countOnScreen = this.w/this.oxLabelWidth;
  this.previewChartWidth = this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2;
  this.previewChartStep = Math.round((this.previewChartWidth/(this.L))*this.round)/this.round;
  if (this.buttonsContainer) {
    this.buttonsContainer.style.width = this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2 + 'px';
  }

  this.needDrawPreview = true;
  this.update();
}

ChartBase.prototype.updateHeight = function () {
  this.previewUI.style.top = this.h - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_HEIGHT"] - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_INNER_MARGIN_TOP"] + 'px';
  this.canvas.height = this.h;

  this.bottomY = this.h - _consts__WEBPACK_IMPORTED_MODULE_5__["OXLABELS_HEIGHT"] - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_HEIGHT"] - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_MARGIN"];
  this.oxLabelsBottomY = this.h - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_HEIGHT"] - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_MARGIN"];
  this.previewChartY = this.h - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_HEIGHT"] + 1;
};

ChartBase.prototype.onResize = function(e) {
  var newWidth = this.container.getBoundingClientRect().width;
  var newHeight = this.container.getBoundingClientRect().height;

  newWidth = Math.min(newWidth, _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_MAX_WIDTH"]);
  newHeight = Math.min(newHeight, _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_MAX_HEIGHT"]);
  newHeight = Math.max(newHeight, _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_MIN_HEIGHT"]);

  if (newWidth !== this.w || this.pixelRatio !== window.devicePixelRatio) {
    this.pixelRatio = window.devicePixelRatio;
    this.w = newWidth;
    this.updateWidth();
  }

  if (newHeight !== this.h) { }

};

ChartBase.prototype.initHeader = function () {
  this.header = document.createElement('div');
  this.header.classList.add('chart-header');
  this.header.style.width = this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2 + 'px';
  this.header.style.height = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_HEADER_HEIGHT"] + 'px';
  // header.style.marginLeft = CHART_GRID_PADDING + 'px';
  this.header.style.margin = '0 0 ' + _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_HEADER_MARGIN_BOTTOM"] + 'px ' + _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"] + 'px';

  var title = document.createElement('h4');
  title.innerHTML = this.name + ' ' + this.pixelRatio;
  this.header.append(title);

  this.dateRange = document.createElement('h5');
  // this.dateRange.id = this.name + 'date-range';
  this.dateRange.innerHTML = 'Sat, 11 Apr 2020 - Mon, 12 Mar 2021'; // FIXME Init with initial data
  this.header.append(this.dateRange);

  this.chartContainer.append(this.header);
}

ChartBase.prototype.updateDateRange = function (sI=this.startInd, eI=this.endInd) {
  this.dateRange.innerHTML = Object(_utils__WEBPACK_IMPORTED_MODULE_4__["createLabelFromDate"])(this.dateColumn[sI], true) + ' - ' + Object(_utils__WEBPACK_IMPORTED_MODULE_4__["createLabelFromDate"])(this.dateColumn[eI], true);
}

ChartBase.prototype.initData = function(dataLength=Number.POSITIVE_INFINITY) {
  this.dateColumn = Object(_utils__WEBPACK_IMPORTED_MODULE_4__["getDataColumnByName"])('x', this.data.columns);
  this.oxLabels = this.dateColumn.slice(0, dataLength).map(date => Object(_utils__WEBPACK_IMPORTED_MODULE_4__["createLabelFromDate"])(date));

  this.columnNames = Object.keys(this.data.names); // FIXME Remove
  this.columns = [];
  for (var i = 0; i < this.columnNames.length; i++) {
    this.columns.push({
      id: this.columnNames[i],
      name: this.data.names[this.columnNames[i]],
      isOn: true,
      color: this.data.colors[this.columnNames[i]],
      alpha: new _animations__WEBPACK_IMPORTED_MODULE_3__["AnimatedValue"](1, _consts__WEBPACK_IMPORTED_MODULE_5__["Y_ANIMATION_TIME"]),
      values: Object(_utils__WEBPACK_IMPORTED_MODULE_4__["getDataColumnByName"])(this.columnNames[i], this.data.columns).slice(0, dataLength)
    });
  }
}

ChartBase.prototype.init = function() {
  this.initDrawProps();
  this.initOxProps();
  this.initOyProps();
  this.initPreviewChartProps();

  // this.drawpreview();
  this.initInfo();
  this.initButtons();
  this.update();
}

ChartBase.prototype.initDrawProps = function() {
  this.initColors(_consts__WEBPACK_IMPORTED_MODULE_5__["CHART_DAY_THEME"]);

  this.mouseX = null;
  this.mouseY = null;

  this.drawIndOffset = 10;

  this.bottomY = this.h - _consts__WEBPACK_IMPORTED_MODULE_5__["OXLABELS_HEIGHT"] - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_HEIGHT"] - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_MARGIN"]; // FIXME rename to mainChartY
  this.oxLabelsBottomY = this.h - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_HEIGHT"] - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_MARGIN"]; // FIXME rename to oxLabelsY

  this.needRedraw = true;
  this.needDrawPreview = true;

  this.gridWidth = this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2;

  this.barWidth = 0; // FIXME rename to step
  this.offsetX = 0;

  this.oldRangeX = 0;
  this.currRangeX = 1;

  this.startInd = 0;
  this.endInd = 0;
  this.selectedInd = -1;
  this.selectedScreenX = 0;
  this.selectedScreenY = 0;
}

ChartBase.prototype.initOxProps = function() {
  this.oxLabelWidth = 50;
  this.labelWidthHalf = 15; // FIXME Rename
  this.oxLabelsOffsetX = 0;

  this.countOnScreen = this.w/this.oxLabelWidth;
  this.currOxLabelsStep = 1;
  this.staticOxLabels = { step: 1, lastInd: 0, alpha: new _animations__WEBPACK_IMPORTED_MODULE_3__["AnimatedValue"](1, _consts__WEBPACK_IMPORTED_MODULE_5__["OX_LABELS_ANIMATION_DURATION"]) };
  this.dynamicOxLabels = { step: 1, lastInd: 0, alpha: new _animations__WEBPACK_IMPORTED_MODULE_3__["AnimatedValue"](1, _consts__WEBPACK_IMPORTED_MODULE_5__["OX_LABELS_ANIMATION_DURATION"]) };
}

ChartBase.prototype.initOyProps = function() {
  this.gridStepY = 0;
  this.gridMaxY = new _animations__WEBPACK_IMPORTED_MODULE_3__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_5__["Y_ANIMATION_TIME"]);

  this.gridLinesHeight = Math.round(this.bottomY / _consts__WEBPACK_IMPORTED_MODULE_5__["GRID_LINES_COUNT"]);
  this.oldOyLabels = {
    alpha: new _animations__WEBPACK_IMPORTED_MODULE_3__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_5__["Y_ANIMATION_TIME"]),
    offsetY: this.gridLinesHeight/2,
    labels: [0, 1, 2, 3, 4, 5, 6]
  };
  this.newOyLabels = {
    alpha: new _animations__WEBPACK_IMPORTED_MODULE_3__["AnimatedValue"](1, _consts__WEBPACK_IMPORTED_MODULE_5__["Y_ANIMATION_TIME"]),
    offsetY: -this.gridLinesHeight/2,
    labels: [0, 1, 2, 3, 4, 5]
  };
}

ChartBase.prototype.initPreviewChartProps = function() {
  this.previewChartX = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"];
  this.previewChartY = this.h - _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_HEIGHT"] + 1;
  this.previewChartWidth = this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2;
  this.previewChartHeight = _consts__WEBPACK_IMPORTED_MODULE_5__["PREVIEW_CHART_HEIGHT"];
  this.previewChartStep = Math.round((this.previewChartWidth/(this.L))*this.round)/this.round;
}

ChartBase.prototype.initInfo = function() {
  this.info = Object(_point_info__WEBPACK_IMPORTED_MODULE_1__["createInfo"])();
  for (var i = 0; i < this.columns.length; i++) {
    this.info.addRow(this.columns[i].name, 0, this.columns[i].color);
  }
  this.chartContainer.append(this.info);
}

ChartBase.prototype.select = function(x, y) {
  this.selectedScreenX = x;
  this.selectedScreenY = y;
  this.selectedInd = this.getIndByScreenX(x);
  this.info.setTitle(Object(_utils__WEBPACK_IMPORTED_MODULE_4__["createLabelFromDate"])(this.dateColumn[this.selectedInd], true));
  this.columns.filter(c => c.isOn).forEach(c => {
    this.info.setRowValue(c.name, c.values[this.selectedInd]);
  });
}

ChartBase.prototype.drawBg = function() {
  this.drawOxLabels(this.staticOxLabels, this.oxLabels.length - 1);
  this.drawOxLabels(this.dynamicOxLabels, this.oxLabels.length - 1 - Math.floor(this.dynamicOxLabels.step/2)); // Говно какое-то
  this.drawOyLabels(this.oldOyLabels);
  this.drawOyLabels(this.newOyLabels);
  this.drawZeroLine();
}

ChartBase.prototype.drawZeroLine = function () {
  this.ctx.beginPath();
  this.ctx.globalAlpha = 1;
  this.ctx.fillText(0, _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"], this.bottomY + _consts__WEBPACK_IMPORTED_MODULE_5__["OY_LABELS_MARGIN_TOP"]);
  this.ctx.moveTo(_consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"], this.bottomY + 0.5);
  this.ctx.lineTo(this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"], this.bottomY + 0.5);
  this.ctx.stroke();
};

ChartBase.prototype.calculateOxLabelsOffsetX = function () {
  this.oxLabelsOffsetX = this.offsetX - this.labelWidthHalf;
};

ChartBase.prototype.drawOxLabels = function(oxLabelsProps, lastInd) {
  if (oxLabelsProps.alpha.value <= 0) return;

  while(lastInd > this.endInd) lastInd -= oxLabelsProps.step;

  this.ctx.beginPath();
  this.ctx.globalAlpha = oxLabelsProps.alpha.value;
  this.ctx.fillStyle = this.gridTextsColor;

  for (var i = lastInd; i >= this.startInd; i-=oxLabelsProps.step) {
    this.ctx.fillText(this.oxLabels[i], Math.floor(i * this.barWidth + this.oxLabelsOffsetX), this.oxLabelsBottomY - _consts__WEBPACK_IMPORTED_MODULE_5__["OXLABELS_HEIGHT"]/2);
  }
}

ChartBase.prototype.updateOxLabels = function() {
  var step = Math.max(1, (this.endInd - this.startInd + 1) / this.countOnScreen); // FIXME если range не изменился, то и сюда не надо
  var p = 1;
  while (step > p) p *= 2;
  step = p;

  if (step === this.currOxLabelsStep) return false;

  var now = performance.now();

  if (step > this.currOxLabelsStep) {
    this.currOxLabelsStep *= 2;
    this.dynamicOxLabels.alpha.set(1);
    this.dynamicOxLabels.alpha.set(0, now, true);
    this.staticOxLabels.step = this.currOxLabelsStep;
    this.dynamicOxLabels.step = this.currOxLabelsStep;
  }
  else if (step < this.currOxLabelsStep) {
    this.dynamicOxLabels.alpha.set(0);
    this.dynamicOxLabels.alpha.set(1, now, true);
    this.staticOxLabels.step = this.currOxLabelsStep;
    this.dynamicOxLabels.step = this.currOxLabelsStep;
    this.currOxLabelsStep /= 2;
  }

  return true;
}

ChartBase.prototype.drawOyLabels = function(oyLabels) {
  if (oyLabels.alpha.value <= 0) return;
  this.ctx.globalAlpha = oyLabels.alpha.value;
  this.ctx.strokeStyle = this.gridLinesColor;
  this.ctx.fillStyle = this.gridTextsColor;
  this.ctx.lineWidth = 1;
  this.ctx.beginPath();

  var offset = Math.round(
    oyLabels.labels.length * this.gridLinesHeight + oyLabels.offsetY*(1-oyLabels.alpha.value)
  );

  for (var i = 1; i < oyLabels.labels.length; i++) {
    var y = offset - i * this.gridLinesHeight;

    this.ctx.fillText(
      oyLabels.labels[i],
      _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"],
      y + _consts__WEBPACK_IMPORTED_MODULE_5__["OY_LABELS_MARGIN_TOP"]
    );
    y -= 0.5;
    this.ctx.moveTo(_consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"], y);
    this.ctx.lineTo(this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"], y);
  }
  this.ctx.stroke();
}

ChartBase.prototype.initButtons = function() {
  this.buttonsContainer = document.createElement('div');
  this.buttonsContainer.style.width = this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]*2 + 'px';
  this.buttonsContainer.style.marginLeft = _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"] + 'px';
  this.buttonsContainer.classList.add('buttons-container');

  for (var i = 0; i < this.columns.length; i++) {
    var b = Object(_button__WEBPACK_IMPORTED_MODULE_2__["createButton"])(this.columns[i].color, this.columns[i].name, function(name, isOn) {
      this.buttonClicked(name, isOn);
    }.bind(this));
    this.buttonsContainer.append(b);
  }

  this.chartContainer.append(this.buttonsContainer);
}

ChartBase.prototype.buttonClicked = function() {}

ChartBase.prototype.drawFrame = function() {
  // this.ctx.beginPath();
  // this.ctx.strokeStyle = '#000000'
  // this.ctx.rect(0, 0, this.w, this.bottomY);
  // this.ctx.stroke()
}

ChartBase.prototype.drawSequence = function() {
  this.drawBg();
  this.drawChartContent();
  this.drawSelected();
}


ChartBase.prototype.drawSelectedChartContent = function () {}

ChartBase.prototype.drawSelected = function() {
  if (this.selectedInd >= 0) {
    this.drawSelectedChartContent();

    this.info.style.left = Math.max(this.selectedScreenX - this.info.offsetWidth - 30, 0) + 'px'; // FIXME this.info margin
    this.info.style.top = Math.max(this.selectedScreenY - this.info.offsetHeight, 0) + 'px';
    this.info.appear();
  }
  else {
    this.info.disappear()
  }
}

ChartBase.prototype.checkRedrawBg = function(now) {
  if (this.gridMaxY.nextTick(now)) this.needRedraw = true;
  if (this.oldOyLabels.alpha.nextTick(now)) this.needRedraw = true;
  if (this.newOyLabels.alpha.nextTick(now)) this.needRedraw = true;
  if (this.dynamicOxLabels.alpha.nextTick(now)) this.needRedraw = true;
}

ChartBase.prototype.checkRedrawChartsContent = function(now) {
  for (var i = 0; i < this.columns.length; i++) {
    if (this.columns[i].alpha.nextTick(now)) {
      this.needRedraw = this.needDrawPreview = true;
    }
  }
}

ChartBase.prototype.drawChartContent = function() {}

ChartBase.prototype.clearDrawPreview = function() {
  this.ctx.clearRect(this.previewChartX-2, this.previewChartY, this.previewChartWidth+4, this.previewChartY);
}

ChartBase.prototype.calculateValuesMaxY = function() {
  var t = Object(_utils__WEBPACK_IMPORTED_MODULE_4__["getMatrixMax"])(this.columns.filter(c => c.isOn).map(c => c.values.slice(this.startInd, this.endInd+1)));
  return Object(_utils__WEBPACK_IMPORTED_MODULE_4__["getMatrixMax"])(this.columns.filter(c => c.isOn).map(c => c.values.slice(this.startInd, this.endInd+1)));
}

ChartBase.prototype.updateY = function () {
  var maxY = this.calculateValuesMaxY();
  var newGridStepY = Object(_utils__WEBPACK_IMPORTED_MODULE_4__["getStepForGridValues"])(maxY);

  if (this.gridStepY !== newGridStepY) {
    var now = performance.now();

    this.gridMaxY.set(newGridStepY*6, now, true);

    if (
      (this.oldOyLabels.offsetY > 0 && this.gridStepY > newGridStepY) ||
      (this.oldOyLabels.offsetY < 0 && this.gridStepY < newGridStepY)
    ) {
      this.oldOyLabels.offsetY *= -1;
      this.newOyLabels.offsetY *= -1;
    }

    this.gridStepY = newGridStepY;

    this.oldOyLabels.alpha.set(1);
    this.oldOyLabels.alpha.set(0, now, true);
    this.newOyLabels.alpha.set(0);
    this.newOyLabels.alpha.set(1, now, true);

    this.oldOyLabels.labels = this.newOyLabels.labels;
    this.newOyLabels.labels = [0, 1, 2, 3, 4, 5].map(n => n*newGridStepY);
  }
};

ChartBase.prototype.onMouseEnter = function(e) {
  this.canvas.onmousemove = this.onMouseMove.bind(this);
  this.canvas.onmouseleave = this.onMouseLeave.bind(this);
}

ChartBase.prototype.onMouseMove = function (e) {
  if (e.layerY <= this.bottomY) {
    if (e.layerX > _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"] && e.layerX < this.w - _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"]) {
      this.mouseX = e.layerX;
      this.mouseY = e.layerY;
    }
  }
  else {
    this.selectedInd = -1;
  }

  if (this.previewUIState < 1) {
    this.startUpdate();
  }
}

ChartBase.prototype.onMouseLeave = function () {
  this.selectedInd = -1;
  this.canvas.onmousemove = null;
  this.canvas.onmouseleave = null;

  this.mouseX = null;
  this.mouseY = null;

  if (this.previewUIState < 1) {
    this.startUpdate();
  }
}

ChartBase.prototype.getScreenXByInd = function (i, step=this.barWidth, offset=this.offsetX) {
  return i*step + offset;
};

ChartBase.prototype.getIndByScreenX = function (x, step=this.barWidth, offset=this.offsetX) {
  return Math.round((x - offset)/step);
};

ChartBase.prototype.update = function() {
  requestAnimationFrame(function() {

  if (this.previewUIState > 0) {
    var state = this.previewUI.update();

    if (this.previewUILeftX !== state.left || this.previewUIRightX !== state.right) {
      this.previewUILeftX = state.left;
      this.previewUIRightX = state.right;
    }
  }

  this.startInd = Math.max(Math.ceil(this.previewUILeftX * this.L) - 1, 0);
  this.endInd = Math.ceil(this.previewUIRightX * this.L);
  this.barWidth = this.gridWidth/(this.L*(this.previewUIRightX-this.previewUILeftX));
  this.offsetX = calculateOffsetX(this.gridWidth, _consts__WEBPACK_IMPORTED_MODULE_5__["CHART_GRID_PADDING"], this.previewUILeftX, this.previewUIRightX);

  this.updateDateRange();
  this.calculateOxLabelsOffsetX();
  this.updateY();

  if (this.mouseX) { // FIXME Move to drawSelected
    this.select(this.mouseX, this.mouseY)
  }

  // ------------------- DRAW -------------------

  this.ctx.clearRect(0, 0, this.w, this.previewChartY);

  var now = performance.now();
  this.needRedraw = false;

  if (this.updateOxLabels()) this.needRedraw = true;
  this.checkRedrawBg(now);
  this.checkRedrawChartsContent(now);

  this.drawSequence();

  if (this.needDrawPreview) {
    this.needDrawPreview = false;
    this.drawPreview();
  }

  if (this.needRedraw || this.previewUIState > 0) {
    this.update();
  }

  }.bind(this));
}

ChartBase.prototype.startUpdate = function () {
  if (!this.needRedraw) {
    this.needRedraw = true;
    this.update();
  }
};

function calculateOffsetX(w, padding, left, right) {
  return w + padding - right*w/(right-left);
}

function getScreenXByInd(i, step, offset=0) {
  return i*step + offset;
}

function getIndByScreenX(x, step, offset=0) {
  return Math.round((x - offset)/step);
}

function getYCoords(height, Y, max) {
  var coords = []
  for (var i = 0; i < Y.length; i++) {
    coords.push(Math.floor(height - (Y[i]/max) * height));
  }
  return coords;
}

function getScreenY(height, y, max) {
  var screenY = height - y*height/max;
  return Math.floor(screenY);
}


/***/ }),

/***/ "./src/charts/line-chart.js":
/*!**********************************!*\
  !*** ./src/charts/line-chart.js ***!
  \**********************************/
/*! exports provided: lineChart, LineChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lineChart", function() { return lineChart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LineChart", function() { return LineChart; });
/* harmony import */ var _chart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart */ "./src/charts/chart.js");
/* harmony import */ var _animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../animations */ "./src/animations.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ "./src/utils.js");
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../consts */ "./src/consts.js");





function lineChart(container, data, name) {
  var chart = new LineChart(container, data, name);
  return chart;
}

function LineChart(container, data) {
  console.log(data);
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].apply(this, arguments);
  this.init();
}

LineChart.prototype = Object.create(_chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype);
LineChart.prototype.constructor = LineChart;

LineChart.prototype.initData = function() {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.initData.call(this);
}

LineChart.prototype.initOyProps = function() {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.initOyProps.apply(this);

  this.gridPreviewMaxY = new _animations__WEBPACK_IMPORTED_MODULE_1__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_3__["Y_ANIMATION_TIME"]);
  this.gridPreviewMaxY.set(this.calculateGridPreviewMaxY(), performance.now(), true);
}

LineChart.prototype.calculateGridPreviewMaxY = function () {
  return Object(_utils__WEBPACK_IMPORTED_MODULE_2__["getMatrixMax"])(this.columns.filter(c => c.isOn).map(c => c.values));
}

LineChart.prototype.buttonClicked = function(name, isOn) {
  var now = performance.now();
  for (var i = 0; i < this.columns.length; i++) {
    if (this.columns[i].name === name) {
      if (isOn) {
        this.columns[i].alpha.set(1, now, true);
        this.info.enableRow(this.columns[i].name);
      }
      else {
        this.columns[i].alpha.set(0, now, true);
        this.info.disableRow(this.columns[i].name);
      }
      this.columns[i].isOn = isOn;

      this.gridPreviewMaxY.set(Math.max(this.calculateGridPreviewMaxY(), 0), now, true);

      this.update();
    }
  }
}

LineChart.prototype.checkRedrawChartsContent = function(now) {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.checkRedrawChartsContent.call(this, now);

  if (this.gridPreviewMaxY.nextTick(now)) this.needDrawPreview = true;
}

LineChart.prototype.drawChartContent = function() {
  var barW = Math.round(this.barWidth*this.round)/this.round;
  var sI = Math.max(this.startInd - this.drawIndOffset, 0);
  var eI = Math.min(this.endInd + this.drawIndOffset, this.L);

  // var sI = Math.max(this.startInd - 1, 0);
  // var eI = Math.min(this.endInd + 1, this.L);

  var X = [];
  for (var i = sI; i < eI+1; i++) {
    X.push(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenXByInd"])(i, barW, this.offsetX));
  }

  for (var i = 0; i < this.columns.length; i++) {
    var Y = Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getYCoords"])(this.bottomY, this.columns[i].values.slice(sI, eI+1), this.getGridMaxForColumn(this.columns[i]));
    this.drawLine(X, Y, this.columns[i].color, this.columns[i].alpha.value);
  }
}

LineChart.prototype.getGridMaxForColumn = function(column) {
  return this.gridMaxY.value;
};

LineChart.prototype.drawLine = function(X, Y, color, alpha, lineWidth) {
  if (alpha > 0) {
    alpha = alpha || 1;
    lineWidth = lineWidth || 2;
    this.ctx.beginPath();
    this.ctx.globalAlpha = alpha;
    this.ctx.strokeStyle = color;
    this.ctx.lineCap = 'round';
    this.ctx.lineJoin = 'round';
    this.ctx.lineWidth = lineWidth;

    this.ctx.moveTo(X[0], Y[0]);
    for (let i=1; i < X.length; i++) {
      this.ctx.lineTo(X[i], Y[i]);
    }
    this.ctx.stroke();
  }
}

LineChart.prototype.drawSelectedChartContent = function() {
  // if (this.selectedInd > 0) {

    var barW = Math.round(this.barWidth*this.round)/this.round;
    var selectedIndX = Math.floor(this.getScreenXByInd(this.selectedInd, barW));
    var maxScreenY = 0;

    // console.log('selected');

    var ind = this.selectedInd - this.startInd;
    var filteredColumns = this.columns.filter(c => c.isOn);

    this.ctx.beginPath();
    this.ctx.globalAlpha = 1;
    this.ctx.strokeStyle = this.gridLinesColor;
    this.ctx.lineWidth = 1;
    this.ctx.moveTo(this.selectedScreenX + 0.5, 0);
    this.ctx.lineTo(this.selectedScreenX + 0.5, this.bottomY);
    this.ctx.stroke();

    this.ctx.beginPath();
    this.ctx.fillStyle = '#FFFFFF'; // FIXME Color
    filteredColumns.forEach(c => {
      var y = Math.floor(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenY"])(this.bottomY, c.values[this.selectedInd], this.getGridMaxForColumn(c)));
      if (y > maxScreenY) maxScreenY = y;

      this.ctx.arc(
        selectedIndX,
        y,
        5.5, // FIXME Radius to const
        0,
        2 * Math.PI
      );
    });
    this.ctx.fill();

    filteredColumns.forEach(c => {
      this.ctx.beginPath();
      this.ctx.lineWidth = 2;
      this.ctx.strokeStyle = this.data.colors[c.id];
      this.ctx.arc(
        selectedIndX,
        Math.floor(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenY"])(this.bottomY, c.values[this.selectedInd], this.getGridMaxForColumn(c))),
        5.5,
        0,
        2 * Math.PI
      );
      this.ctx.stroke();
      this.ctx.closePath();
    });
}

LineChart.prototype.getGridMaxForColumnPreview = function(column) {
  return this.gridPreviewMaxY.value;
};

LineChart.prototype.drawPreview = function() {
  this.clearDrawPreview();

  var X = [];
  for (var i = 0; i < this.oxLabels.length; i++) {
    X.push(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenXByInd"])(i, this.previewChartStep, this.previewChartX));
  }
  X[0] += 1
  X[X.length-1] -= 1;

  this.ctx.beginPath();
  for (var i = 0; i < this.columns.length; i++) {
    var Y = Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getYCoords"])(this.previewChartHeight, this.columns[i].values, this.getGridMaxForColumnPreview(this.columns[i]))
    // .map(y => this.previewChartY + y);
    .map(y => Math.max(this.previewChartY + y, this.previewChartY));

    this.drawLine(X, Y, this.columns[i].color, this.columns[i].alpha.value, 1);
  }
}


/***/ }),

/***/ "./src/charts/point-info.js":
/*!**********************************!*\
  !*** ./src/charts/point-info.js ***!
  \**********************************/
/*! exports provided: createInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInfo", function() { return createInfo; });
const INFO_ANIMATION_TIME = 0.3;

function createInfo(name) {
  var container = document.createElement('div');
  // container.style.position = 'absolute';
  container.classList.add('point-info');
  container.style.transition = 'opacity ' + INFO_ANIMATION_TIME + 's';
  container.style.opacity = 0;
  container.style.display = 'none';
  container.isOn = false;

  // container.style.backgroundColor = 'red';

  var title = document.createElement('h4');
  title.classList.add('point-info-title');
  title.innerHTML = 'Title';

  container.appear = function() {
    container.isOn = true;
    container.style.display = 'block';

    setTimeout(function() {
      container.style.opacity = 1;
    }, 0)
  }

  container.disappear = function() {
    if (container.isOn) {
      container.isOn = false;
      container.style.opacity = 0;
      setTimeout(function() {
        container.style.display = 'none';
      }, INFO_ANIMATION_TIME * 1000)
    }
  }

  container.setTitle = function(text) {
    title.innerHTML = text;
  }

  // container.getWidth = function() {
  //   return conatinergetCli
  // }
  var rows = {};

  container.addRow = function(text, value, color='black') {
    var newRow = document.createElement('div');
    newRow.id = 'row' + text;
    newRow.classList.add('point-info-row')

    var textSpan = document.createElement('span');
    textSpan.innerHTML = text;

    var valueSpan = document.createElement('span');
    valueSpan.classList.add('point-info-row-value')
    valueSpan.id = text;
    valueSpan.style.color = color;
    valueSpan.innerHTML = value;

    rows[text] = valueSpan;

    newRow.append(textSpan);
    newRow.append(valueSpan);
    container.append(newRow);
  }

  container.enableRow = function(text) {
    var e = document.getElementById('row' + text);
    if (e) {
      e.style.display = 'flex';
    }
  }

  container.disableRow = function(text) {
    var e = document.getElementById('row' + text);
    if (e) {
      e.style.display = 'none';
    }
  }

  container.setRowValue = function(key, value) {
    rows[key].innerHTML = value;
  }

  container.append(title);
  return container;
}


/***/ }),

/***/ "./src/charts/preview-ui.js":
/*!**********************************!*\
  !*** ./src/charts/preview-ui.js ***!
  \**********************************/
/*! exports provided: preview */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "preview", function() { return preview; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./src/utils.js");
/* harmony import */ var _consts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../consts.js */ "./src/consts.js");



const PREVIEW_RESIZE_AREA_WIDTH = 10;
const PREVIEW_MIN_WIDTH = 30;

const PREVIEW_BORDERS_WIDTH = 10;
const PREVIEW_BORDER_RADIUS = 5;

const PREVIEW_ACTIONS = {
  None: 0,
  ResizeLeft: 1,
  Move: 2,
  ResizeRight: 3,
};

// export function preview(w, h, pixelRatio) {
function preview(w, h, pixelRatio, onActionUpdate) {
  var canvas = document.createElement('canvas');
  var ctx = canvas.getContext('2d');

  var currW = w;
  var currH = h;

  canvas.width = currW * pixelRatio;
  canvas.height = currH * pixelRatio;
  canvas.style.width = currW + 'px';
  canvas.style.height = currH + 'px';
  ctx.scale(pixelRatio, pixelRatio);

  var previewMaskColor = '#000000';
  var previewMaskAlpha = '#000000';
  var previewBorderColor = '#000000';
  var previewCornersFillColor = '#000000';

  var previewHeight = currH - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"] * 2;

  var leftX = (1 - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INIT_W"]) * currW;
  var rightX = 1 * currW;

  var state = { action: PREVIEW_ACTIONS.None, left: 1 - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INIT_W"], right: 1 };
  function updateState() {
    state.left = leftX/currW;
    state.right = rightX/currW;
  }
  updateState();

  function updateAction(action) {
    state.action = action || PREVIEW_ACTIONS.None;

    if (onActionUpdate) {
      onActionUpdate(state.action);
    }
  }

  canvas.updateWidth = function(w, pixelRatio) { //FIXME Rename
    currW = w;

    canvas.width = currW * pixelRatio;
    canvas.height = currH * pixelRatio;
    canvas.style.width = currW + 'px';
    ctx.scale(pixelRatio, pixelRatio);

    leftX = state.left * currW
    rightX = state.right * currW;

    canvas.draw();
  }

  canvas.switchTheme = function(theme) {
    setTheme(theme);
    canvas.draw();
  }

  function setTheme(theme) {
    previewMaskColor = theme.previewMaskColor;
    previewMaskAlpha = theme.previewMaskAlpha;
    previewBorderColor = theme.previewBorderColor;
    previewCornersFillColor = theme.previewCornersFillColor;
  }
  setTheme(_consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_DAY_THEME"]);

  function leftZoneUpdate(x) {
    if (leftX > rightX - PREVIEW_MIN_WIDTH) leftX = rightX - PREVIEW_MIN_WIDTH;
    else if (leftX < 0) leftX = 0;
  }

  function centralZoneUpdate(currWidth) {
    if (leftX < 0) leftX = 0;
    if (leftX > currW - currWidth) leftX = currW - currWidth;
    rightX = leftX + currWidth;
  }

  function rightZoneUpdate(x) {
    if (rightX < leftX + PREVIEW_MIN_WIDTH) rightX = leftX + PREVIEW_MIN_WIDTH;
    else if (rightX > currW) rightX = currW;
  }

  var mouseX = null;

  var offsetLeftX = null;
  var currWidth = null;
  var offsetRightX = null;

  function checkAction(e) {
    mouseX = e.clientX;
    if (isLeftZone(e.clientX - canvas.getBoundingClientRect().x)) {
      offsetLeftX = leftX - e.clientX;
      updateAction(PREVIEW_ACTIONS.ResizeLeft)
    }
    else if (isCentralZone(e.clientX - canvas.getBoundingClientRect().x)) {
      offsetLeftX = leftX - e.clientX;
      currWidth = rightX - leftX;

      updateAction(PREVIEW_ACTIONS.Move)
    }
    else if (isRightZone(e.clientX - canvas.getBoundingClientRect().x)) {
      offsetRightX = rightX - e.clientX;
      updateAction(PREVIEW_ACTIONS.ResizeRight)
    }
  }

  canvas.onmousedown = function(e) {
    console.log('mouse down', e);

    checkAction(e);
    onmousemove = onMouseMove;

    onmouseup = function(e) {
      onmousemove = null;
      onmouseup = null;
      updateAction(PREVIEW_ACTIONS.None);
    }

    return false;
  }

  canvas.ontouchstart = function(e) {
    checkAction(e.touches[0]);
    ontouchmove = onTouchMove;

    ontouchend = function(e) {
      ontouchmove = null;
      ontouchend = null;
      updateAction(PREVIEW_ACTIONS.None);
    }

    return false;
  }

  var onMouseMove = function(e) {
    mouseX = e.clientX;
  }

  var onTouchMove = function(e) {
    mouseX = e.touches[0].clientX;
  }

  canvas.update = function() {
    if (state.action > 0) {
      if (state.action === PREVIEW_ACTIONS.ResizeLeft) {
        leftX = mouseX + offsetLeftX;
        leftZoneUpdate();
      }
      if (state.action === PREVIEW_ACTIONS.Move) {
        leftX = mouseX + offsetLeftX;
        centralZoneUpdate(currWidth);
      }
      if (state.action === PREVIEW_ACTIONS.ResizeRight) {
        rightX = mouseX + offsetRightX;
        rightZoneUpdate();
      }

      updateState();
      canvas.draw();
    }

    return state;
  }

  var offX = 1;
  var maskOverlayX = 4;

  canvas.draw = function() {
    ctx.clearRect(0, 0, currW, currH);

    ctx.beginPath();
    ctx.fillStyle = previewMaskColor;
    ctx.globalAlpha = previewMaskAlpha;

    var left = leftX;
    var right = rightX;
    ctx.rect(0, _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"], left + maskOverlayX, previewHeight);
    ctx.rect(right - maskOverlayX, _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"], currW - right + maskOverlayX, previewHeight);
    ctx.fill();


    ctx.globalAlpha = 1;
    ctx.fillStyle = previewCornersFillColor;

    ctx.beginPath();
    ctx.arc(
      PREVIEW_BORDER_RADIUS,
      PREVIEW_BORDER_RADIUS + _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"],
      PREVIEW_BORDER_RADIUS,
      1*Math.PI,
      1.5*Math.PI
    );
    ctx.moveTo(PREVIEW_BORDER_RADIUS, _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.lineTo(0, _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.lineTo(0, PREVIEW_BORDER_RADIUS + _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.fill();

    ctx.beginPath();
    ctx.arc(
      currW - PREVIEW_BORDER_RADIUS,
      PREVIEW_BORDER_RADIUS + _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"],
      PREVIEW_BORDER_RADIUS,
      1.5*Math.PI,
      0*Math.PI
    );
    ctx.moveTo(currW, PREVIEW_BORDER_RADIUS + _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.lineTo(currW, _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.lineTo(currW - PREVIEW_BORDER_RADIUS, _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.fill();

    ctx.beginPath();
    ctx.arc(
      currW - PREVIEW_BORDER_RADIUS,
      currH - PREVIEW_BORDER_RADIUS - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"],
      PREVIEW_BORDER_RADIUS,
      0*Math.PI,
      0.5*Math.PI
    );
    ctx.moveTo(currW - PREVIEW_BORDER_RADIUS, currH - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.lineTo(currW, currH - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.lineTo(currW, currH - PREVIEW_BORDER_RADIUS - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.fill();

    ctx.beginPath();
    ctx.arc(
      PREVIEW_BORDER_RADIUS,
      currH - PREVIEW_BORDER_RADIUS - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"],
      PREVIEW_BORDER_RADIUS,
      0.5*Math.PI,
      1*Math.PI
    );
    ctx.moveTo(0, currH - PREVIEW_BORDER_RADIUS - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.lineTo(0, currH - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.lineTo(PREVIEW_BORDER_RADIUS, currH - _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"]);
    ctx.fill();

    ctx.strokeStyle = previewBorderColor;
    ctx.lineWidth = 1 + offX;
    ctx.globalAlpha = 1;
    roundRect(
      ctx,
      left+offX,
      _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"],
      right - left - offX*2,
      previewHeight,
      [PREVIEW_BORDER_RADIUS, PREVIEW_BORDER_RADIUS, PREVIEW_BORDER_RADIUS, PREVIEW_BORDER_RADIUS]
    );

    ctx.fillStyle = previewBorderColor;
    roundRect(
      ctx,
      left + offX,
      _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"],
      8,
      previewHeight,
      [PREVIEW_BORDER_RADIUS, 0, 0, PREVIEW_BORDER_RADIUS],
      true
    );
    roundRect(
      ctx,
      right - 8 - offX,
      _consts_js__WEBPACK_IMPORTED_MODULE_1__["PREVIEW_INNER_MARGIN_TOP"],
      8,
      previewHeight,
      [0, PREVIEW_BORDER_RADIUS, PREVIEW_BORDER_RADIUS, 0],
      true
    );
  }
  canvas.draw();

  function isLeftZone(x) {
    return Math.abs(x - leftX) < PREVIEW_RESIZE_AREA_WIDTH;
  }

  function isRightZone(x) {
    return Math.abs(x - rightX) < PREVIEW_RESIZE_AREA_WIDTH;
  }

  function isCentralZone(x) {
    return x > leftX + PREVIEW_RESIZE_AREA_WIDTH && x < rightX - PREVIEW_RESIZE_AREA_WIDTH;
  }

  // requestAnimationFrame(draw);
  return canvas;
}

function roundRect(ctx, x, y, width, height, radius, fill, stroke) {
  if (typeof stroke == 'undefined') {
    stroke = true;
  }
  if (typeof radius === 'undefined') {
    radius = 5;
  }
  if (typeof radius === 'number') {
    radius = {tl: radius, tr: radius, br: radius, bl: radius};
  }
  if (typeof radius === 'object') {
    radius = {tl: radius[0], tr: radius[1], br: radius[2], bl: radius[3]};
  } else {
    var defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0};
    for (var side in defaultRadius) {
      radius[side] = radius[side] || defaultRadius[side];
    }
  }
  ctx.beginPath();
  ctx.moveTo(x + radius.tl, y);
  ctx.lineTo(x + width - radius.tr, y);
  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);
  ctx.lineTo(x + width, y + height - radius.br);
  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);
  ctx.lineTo(x + radius.bl, y + height);
  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);
  ctx.lineTo(x, y + radius.tl);
  ctx.quadraticCurveTo(x, y, x + radius.tl, y);
  ctx.closePath();
  if (fill) {
    ctx.fill();
  }
  else if (stroke) {
    ctx.stroke();
  }

}


/***/ }),

/***/ "./src/charts/stacked-area-chart.js":
/*!******************************************!*\
  !*** ./src/charts/stacked-area-chart.js ***!
  \******************************************/
/*! exports provided: percentageStackedAreaChart, PercentageStackedAreaChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "percentageStackedAreaChart", function() { return percentageStackedAreaChart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PercentageStackedAreaChart", function() { return PercentageStackedAreaChart; });
/* harmony import */ var _chart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart */ "./src/charts/chart.js");
/* harmony import */ var _animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../animations */ "./src/animations.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ "./src/utils.js");
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../consts */ "./src/consts.js");





function percentageStackedAreaChart(container, data, name) {
  var chart = new PercentageStackedAreaChart(container, data, name);
  return chart;
}

function PercentageStackedAreaChart(container, data) {
  console.log(data);
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].apply(this, arguments);
  this.init();
}

PercentageStackedAreaChart.prototype = Object.create(_chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype);
PercentageStackedAreaChart.prototype.constructor = PercentageStackedAreaChart;

PercentageStackedAreaChart.prototype.initData = function() {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.initData.call(this);

  this.percents = this.columns[0].values.map(v => this.columns.map(c => new _animations__WEBPACK_IMPORTED_MODULE_1__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_3__["Y_ANIMATION_TIME"])))
  this.updatePercents();
}

PercentageStackedAreaChart.prototype.updateY = function() {}

PercentageStackedAreaChart.prototype.initOyProps = function() {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.initOyProps.apply(this);

  this.marginTop = 20;

  this.percentageLabels = {
    alpha: { value: 1},
    offsetY: 0,
    labels: [0, 25, 50, 75, 100]
  };
  this.gridLinesHeight = Math.round((this.bottomY - this.marginTop) / 4); // move to const

  this.gridOyTextsColor = '#25252990'; // 50%
}


PercentageStackedAreaChart.prototype.drawOyLabels = function(oyLabels) {
  // if (oyLabels.alpha.value <= 0) return;
  this.ctx.globalAlpha = oyLabels.alpha.value;
  this.ctx.strokeStyle = this.gridLinesColor; // FIXME color to const
  this.ctx.fillStyle = this.gridOyTextsColor; // FIXME color to const
  this.ctx.lineWidth = 1;
  this.ctx.beginPath();

  // var offset = Math.round(this.gridLinesHeight * (oyLabels.labels.length - 1));

  for (var i = 1; i < oyLabels.labels.length; i++) {
    var y = this.bottomY - i * this.gridLinesHeight;
    this.ctx.fillText(
      oyLabels.labels[i],
      _consts__WEBPACK_IMPORTED_MODULE_3__["CHART_GRID_PADDING"],
      y + _consts__WEBPACK_IMPORTED_MODULE_3__["OY_LABELS_MARGIN_TOP"]
    );
    y -= 0.5;
    this.ctx.moveTo(_consts__WEBPACK_IMPORTED_MODULE_3__["CHART_GRID_PADDING"], y);
    this.ctx.lineTo(this.w - _consts__WEBPACK_IMPORTED_MODULE_3__["CHART_GRID_PADDING"], y);
  }
  this.ctx.stroke();
}

PercentageStackedAreaChart.prototype.updatePercents = function () {
  // this.percents = getStackedPercents(this.columns.filter(c => c.isOn).map(c => c.values));
  var now = performance.now();

  var stackedPercents = Object(_utils__WEBPACK_IMPORTED_MODULE_2__["getStackedPercents"])(this.columns.map(c => {
    if (!c.isOn) {
      return c.values.map(v => 0)
    }
    return c.values;
  }));

  for (var i = 0; i < stackedPercents.length; i++) {
    for (var j = 0; j < stackedPercents[i].length; j++) {
      this.percents[i][j].set(Math.min(100, stackedPercents[i][j]), now, true);
    }
  }
};

PercentageStackedAreaChart.prototype.drawBg = function() {
  this.drawOxLabels(this.staticOxLabels, this.oxLabels.length - 1);
  this.drawOxLabels(this.dynamicOxLabels, this.oxLabels.length - 1 - this.dynamicOxLabels.step/2);
}

// PercentageStackedAreaChart.prototype.drawOyLabels = function(oyLabels) {
//   console.log('draw oy');
// }


PercentageStackedAreaChart.prototype.checkRedrawChartsContent = function(now) {
  // console.log('check redraw');
  for (var i = 0; i < this.percents.length; i++) {
    for (var j = 0; j < this.percents[i].length; j++) {
      if (this.percents[i][j].nextTick(now)) {
        this.needRedraw = this.needDrawPreview = true;
      }
    }
  }
}

PercentageStackedAreaChart.prototype.buttonClicked = function(name, isOn) {
  var now = performance.now();
  for (var i = 0; i < this.columns.length; i++) {
    if (this.columns[i].name === name) {
      // if (isOn) this.columns[i].alpha.set(1, now, true)
      // else this.columns[i].alpha.set(0, now, true)
      this.columns[i].isOn = isOn;
      this.updatePercents();

      // this.gridPreviewMaxY.set(Math.max(this.calculateGridPreviewMaxY(), 0), now, true);

      this.update();
    }
  }
}

PercentageStackedAreaChart.prototype.drawChartContent = function() {
  var barW = Math.round(this.barWidth*this.round)/this.round;
  var sI = Math.max(this.startInd - this.drawIndOffset, 0);
  var eI = Math.min(this.endInd + this.drawIndOffset, this.L);

  var X = [];
  for (var i = sI; i < eI+1; i++) {
    X.push(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenXByInd"])(i, barW, this.offsetX));
  }

  var mins = Object(_utils__WEBPACK_IMPORTED_MODULE_2__["transpose"])(this.percents).map(c => Object(_utils__WEBPACK_IMPORTED_MODULE_2__["getMin"])(c.map(v => v.value)));

  X = X.concat(X[X.length-1], X[0]);
  for (var i = this.columns.length - 1; i >= 0 ; i--) {
    var values = this.percents.map(p => p[i]).slice(sI, eI+1);
    var Y = values.map(v => Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenY"])(this.bottomY - this.marginTop, v.value, 100) + this.marginTop);

    var m = Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenY"])(this.bottomY - this.marginTop, (mins[i-1]) ? mins[i-1] : 0, 100) + this.marginTop;
    Y = Y.concat(m, m);
    this.drawArea(X, Y, this.columns[i].color);
  }

  this.drawOyLabels(this.percentageLabels);
  this.drawZeroLine();
}

PercentageStackedAreaChart.prototype.drawArea = function (X, Y, color, alpha=1) {
  // if (alpha > 0) {
    this.ctx.beginPath();
    this.ctx.globalAlpha = alpha;
    this.ctx.fillStyle = color;
    this.ctx.lineWidth = 1;

    this.ctx.moveTo(X[0], Y[0]);
    for (let i=1; i < X.length; i++) {
      this.ctx.lineTo(X[i], Y[i]);
    }
    this.ctx.fill();
  // }
}

PercentageStackedAreaChart.prototype.drawPreview = function() {
  this.clearDrawPreview();

  var X = [];
  for (var i = 0; i < this.oxLabels.length; i++) {
    X.push(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenXByInd"])(i, this.previewChartStep, this.previewChartX));
  }
  X[0] = Math.ceil(X[0]);
  X[X.length-1] = Math.floor(X[X.length-1]);
  X = X.concat(X[X.length-1], X[0]);

  var mins = Object(_utils__WEBPACK_IMPORTED_MODULE_2__["transpose"])(this.percents).map(c => Object(_utils__WEBPACK_IMPORTED_MODULE_2__["getMin"])(c.map(v => v.value))); // Убрать отсюда, можно пересчитывать при изменениях в данных

  for (var i = this.columns.length - 1; i >= 0 ; i--) {
    var values = this.percents.map(p => p[i]);
    var Y = values.map(v => Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenY"])(this.previewChartHeight, v.value, 100));
    var m = Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenY"])(this.previewChartHeight, (mins[i-1]) ? mins[i-1] : 0, 100);
    Y = Y.concat(m, m).map(y => Math.max(this.previewChartY + y, this.previewChartY));

    this.drawArea(X, Y, this.columns[i].color);
  }
}

PercentageStackedAreaChart.prototype.drawSelectedChartContent = function() {
  // if (this.selectedInd > 0) {

    this.ctx.beginPath();
    this.ctx.strokeStyle = this.gridLinesColor;
    this.ctx.lineWidth = 1;
    this.ctx.moveTo(this.selectedScreenX + 0.5, 0);
    this.ctx.lineTo(this.selectedScreenX + 0.5, this.bottomY);
    this.ctx.stroke();

  //   this.info.style.left = this.selectedScreenX - this.info.offsetWidth - 30 + 'px'; // FIXME this.info margin
  //   this.info.style.top = this.selectedScreenY - this.info.offsetHeight/2 + 'px'; // FIXME this.info margin
  //   this.info.appear();
  // }
  // else {
  //   this.info.disappear()
  // }
}


/***/ }),

/***/ "./src/charts/stacked-bar-chart.js":
/*!*****************************************!*\
  !*** ./src/charts/stacked-bar-chart.js ***!
  \*****************************************/
/*! exports provided: stackedBarChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stackedBarChart", function() { return stackedBarChart; });
/* harmony import */ var _chart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart */ "./src/charts/chart.js");
/* harmony import */ var _bar_chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bar-chart */ "./src/charts/bar-chart.js");
/* harmony import */ var _animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../animations */ "./src/animations.js");
/* harmony import */ var _point_info__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./point-info */ "./src/charts/point-info.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ "./src/utils.js");
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../consts */ "./src/consts.js");







// const OX_LABELS_ANIMATION_DURATION = 0.25;
//
// const PREVIEW_CHART_HEIGHT = 50;
// const PREVIEW_CHART_MARGIN = 30


function stackedBarChart(container, data, name) {
  var chart = new StackedBarChart(container, data, name);
  return chart;
}

function StackedBarChart(container, data) {
  // console.log(data);
  _bar_chart__WEBPACK_IMPORTED_MODULE_1__["BarChart"].apply(this, arguments);
  // this.L++;
  // this.init();

}

StackedBarChart.prototype = Object.create(_bar_chart__WEBPACK_IMPORTED_MODULE_1__["BarChart"].prototype);
StackedBarChart.prototype.constructor = StackedBarChart;

StackedBarChart.prototype.initData = function() {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.initData.call(this);

  this.stackedColumns = this.columns.map(c => c.values.map(
    v => 0
  ));

  this.stackedColumnsAnimated = this.columns.map(c => c.values.map(
    v => new _animations__WEBPACK_IMPORTED_MODULE_2__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_5__["Y_ANIMATION_TIME"])
  ));

  this.updateStackedColumns();
}

StackedBarChart.prototype.initInfo = function() {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.initInfo.apply(this);
  // this.info = createInfo();
  // for (var i = 0; i < this.columns.length; i++) {
  //   this.info.addRow(this.columns[i].name, 0, this.columns[i].color);
  // }
  // this.chartContainer.append(this.info);
  this.info.addRow('All', 0, '#000000');
}

StackedBarChart.prototype.updateStackedColumns = function() {
  var sums = Object(_utils__WEBPACK_IMPORTED_MODULE_4__["getStackedArraySums"])(
    this.columns.map(c => (
      (!c.isOn) ? c.values.map(v => 0) : c.values
    ))
  );

  var now = performance.now();
  for (var i = 0; i < sums.length; i++) {
    for (var j = 0; j < sums[i].length; j++) {
      this.stackedColumns[i][j] = sums[i][j];
      this.stackedColumnsAnimated[i][j].set(sums[i][j], now, true);
    }
  }
}

StackedBarChart.prototype.initOyProps = function() {
  _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.initOyProps.apply(this);

  this.gridPreviewMaxY = new _animations__WEBPACK_IMPORTED_MODULE_2__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_5__["Y_ANIMATION_TIME"]);
  this.gridPreviewMaxY.set(this.calculateGridPreviewMaxY(), performance.now(), true);
}

StackedBarChart.prototype.calculateGridPreviewMaxY = function () {
  var arr = this.stackedColumns[this.stackedColumns.length-1];
  return Object(_utils__WEBPACK_IMPORTED_MODULE_4__["getMax"])(arr);
};

StackedBarChart.prototype.initButtons = _chart__WEBPACK_IMPORTED_MODULE_0__["ChartBase"].prototype.initButtons;

StackedBarChart.prototype.buttonClicked = function(name, isOn) {
  var now = performance.now();
  for (var i = 0; i < this.columns.length; i++) {
    if (this.columns[i].name === name) {
      this.columns[i].isOn = isOn;
      if (isOn) this.info.enableRow(this.columns[i].name);
      else this.info.disableRow(this.columns[i].name);
      this.updateStackedColumns();

      if (this.columns.filter(c => c.isOn).length < 1) {
        this.info.disableRow('All')
      }
      else {
        this.info.enableRow('All')
      }

      this.gridPreviewMaxY.set(Math.max(this.calculateGridPreviewMaxY(), 0), now, true);
      this.update();
    }
  }
}

StackedBarChart.prototype.calculateValuesMaxY = function() {
  var arr = this.stackedColumns[this.stackedColumns.length-1]
  .slice(this.startInd, this.endInd+1);

  return Object(_utils__WEBPACK_IMPORTED_MODULE_4__["getMax"])(arr);
}

StackedBarChart.prototype.checkRedrawChartsContent = function(now) {
  for (var i = 0; i < this.stackedColumnsAnimated.length; i++) {
    for (var j = 0; j < this.stackedColumnsAnimated[i].length; j++) {
      if (this.stackedColumnsAnimated[i][j].nextTick(now)) {
        this.needRedraw = this.needDrawPreview = true;
      }
    }
  }
  if (this.gridPreviewMaxY.nextTick(now)) this.needDrawPreview = true;
}

StackedBarChart.prototype.drawChartContent = function() {
  var barW = Math.round(this.barWidth*this.round)/this.round;
  var sI = Math.max(this.startInd - this.drawIndOffset, 0);
  var eI = Math.min(this.endInd + this.drawIndOffset, this.L);

  var X = [];
  for (var i = sI; i < eI+1; i++) {
    X.push(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenXByInd"])(i, barW, this.offsetX));
  }

  var YCoords = this.stackedColumnsAnimated.map(c => c.slice(sI, eI+1))
    .map(c => Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getYCoords"])(this.bottomY, c.map(v => v.value), this.gridMaxY.value));
  YCoords.splice(0, 0, YCoords[1].map(c => this.bottomY));

  this.ctx.globalAlpha = (this.selectedInd > -1) ? 0.6 : 1; // FIXME Alpha to const

  for (var i = this.columns.length-1; i >= 0; i--) {
    this.ctx.beginPath();

    for (var j = 0; j < X.length; j++) {
      if (j !== this.selectedInd - sI) {
        this.ctx.rect(X[j], YCoords[i+1][j], barW, YCoords[i][j] - YCoords[i+1][j]);
      }
    }

    this.ctx.fillStyle = this.columns[i].color;
    this.ctx.fill();
  }

  if (this.selectedInd > -1) {
    this.drawSelectedChartContent();
  }

}

StackedBarChart.prototype.select = function(x, y) {
  this.selectedScreenX = x;
  this.selectedScreenY = y;
  this.selectedInd = this.getIndByScreenX(x);
  this.info.setTitle(Object(_utils__WEBPACK_IMPORTED_MODULE_4__["createLabelFromDate"])(this.dateColumn[this.selectedInd], true));
  this.columns.filter(c => c.isOn).forEach(c => {
    this.info.setRowValue(c.name, c.values[this.selectedInd]);
    this.info.setRowValue('All', this.stackedColumns[this.stackedColumns.length-1][this.selectedInd]);
  });
}

StackedBarChart.prototype.drawSelectedChartContent = function () {
  var barW = Math.round(this.barWidth*this.round)/this.round;
  var selectedIndX = this.getScreenXByInd(this.selectedInd);

  this.ctx.globalAlpha = 1;

  for (var i = this.columns.length-1; i >= 0; i--) {
    var y = Math.floor(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenY"])(this.bottomY, this.stackedColumnsAnimated[i][this.selectedInd].value, this.gridMaxY.value))
    this.ctx.beginPath();
    this.ctx.fillStyle = this.columns[i].color;
    this.ctx.rect(selectedIndX, y, barW, this.bottomY - y);
    this.ctx.fill();
  }
}

StackedBarChart.prototype.drawPreview = function() {
  this.clearDrawPreview();

  var X = [];
  for (var i = 0; i < this.oxLabels.length; i++) {
    X.push(Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getScreenXByInd"])(i, this.previewChartStep, this.previewChartX));
  }
  var barWidth = X[1] - X[0];

  var YCoords = this.stackedColumnsAnimated.map(
    c => Object(_chart__WEBPACK_IMPORTED_MODULE_0__["getYCoords"])(this.previewChartHeight, c.map(v => v.value), this.gridPreviewMaxY.value).map(y => this.previewChartY + y)
  );
  YCoords.splice(0, 0, YCoords[1].map(c => this.h));

  for (var i = this.columns.length-1; i >= 0; i--) {

    this.ctx.beginPath();
    this.ctx.globalAlpha = 1; // FIXME Alpha to const

    for (var j = 0; j < X.length; j++) {
      this.ctx.rect(X[j], YCoords[i+1][j], barWidth, YCoords[i][j] - YCoords[i+1][j]);
    }

    this.ctx.fillStyle = this.columns[i].color;
    this.ctx.fill();
  }
}


/***/ }),

/***/ "./src/charts/two-axes-line-chart.js":
/*!*******************************************!*\
  !*** ./src/charts/two-axes-line-chart.js ***!
  \*******************************************/
/*! exports provided: twoAxesLineChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "twoAxesLineChart", function() { return twoAxesLineChart; });
/* harmony import */ var _chart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart */ "./src/charts/chart.js");
/* harmony import */ var _line_chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./line-chart */ "./src/charts/line-chart.js");
/* harmony import */ var _animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../animations */ "./src/animations.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ "./src/utils.js");
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../consts */ "./src/consts.js");






function twoAxesLineChart(container, data, name) {
  var chart = new TwoAxesLineChart(container, data, name);
  return chart;
}

function TwoAxesLineChart(container, data) {
  // console.log(data);
  _line_chart__WEBPACK_IMPORTED_MODULE_1__["LineChart"].apply(this, arguments);
  // this.init();
}

TwoAxesLineChart.prototype = Object.create(_line_chart__WEBPACK_IMPORTED_MODULE_1__["LineChart"].prototype);
TwoAxesLineChart.prototype.constructor = TwoAxesLineChart;

TwoAxesLineChart.prototype.initOyProps = function() {
  _line_chart__WEBPACK_IMPORTED_MODULE_1__["LineChart"].prototype.initOyProps.apply(this);

  this.gridStepYRight = 0;
  this.gridMaxYRight = new _animations__WEBPACK_IMPORTED_MODULE_2__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_4__["Y_ANIMATION_TIME"]);
  this.gridPreviewMaxYRight = new _animations__WEBPACK_IMPORTED_MODULE_2__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_4__["Y_ANIMATION_TIME"]);
  this.gridPreviewMaxYRight.set(Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getMax"])(this.columns[1].values), performance.now(), true);

  this.oldOyLabels.alphaRight = new _animations__WEBPACK_IMPORTED_MODULE_2__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_4__["Y_ANIMATION_TIME"]);
  this.oldOyLabels.labelsRight = [0, 1, 2, 3, 4, 5, 6];

  this.newOyLabels.alphaRight = new _animations__WEBPACK_IMPORTED_MODULE_2__["AnimatedValue"](0, _consts__WEBPACK_IMPORTED_MODULE_4__["Y_ANIMATION_TIME"]);
  this.newOyLabels.labelsRight = [0, 1, 2, 3, 4, 5, 6];
}

TwoAxesLineChart.prototype.checkRedrawChartsContent = function(now) {
  _line_chart__WEBPACK_IMPORTED_MODULE_1__["LineChart"].prototype.checkRedrawChartsContent.call(this, now);

  if (this.gridPreviewMaxYRight.nextTick(now)) this.needDrawPreview = true;
}

TwoAxesLineChart.prototype.drawZeroLine = function () {
  this.ctx.beginPath();
  this.ctx.globalAlpha = 1;

  this.ctx.fillStyle = this.columns[0].color;
  this.ctx.fillText(0, _consts__WEBPACK_IMPORTED_MODULE_4__["CHART_GRID_PADDING"], this.bottomY + _consts__WEBPACK_IMPORTED_MODULE_4__["OY_LABELS_MARGIN_TOP"]);
  this.ctx.fillStyle = this.columns[1].color;
  this.ctx.fillText(
    0,
    _consts__WEBPACK_IMPORTED_MODULE_4__["CHART_GRID_PADDING"] + this.gridWidth - this.ctx.measureText(0).width,
    this.bottomY + _consts__WEBPACK_IMPORTED_MODULE_4__["OY_LABELS_MARGIN_TOP"]
  );
  this.ctx.moveTo(_consts__WEBPACK_IMPORTED_MODULE_4__["CHART_GRID_PADDING"], this.bottomY + 0.5);
  this.ctx.lineTo(this.w - _consts__WEBPACK_IMPORTED_MODULE_4__["CHART_GRID_PADDING"], this.bottomY + 0.5);
  this.ctx.stroke();
};

TwoAxesLineChart.prototype.drawOyLabels = function(oyLabels) {
  // if (oyLabels.alpha.value <= 0 && oyLabels.alphaRight.value <= 0) return;
  if (oyLabels.alpha.value > 0) {
    this.ctx.fillStyle = this.columns[0].color;
    this.ctx.globalAlpha = oyLabels.alpha.value;
    var offset = Math.round(
      oyLabels.labels.length * this.gridLinesHeight + oyLabels.offsetY*(1-oyLabels.alpha.value)
    );

    for (var i = 1; i < oyLabels.labels.length; i++) {
      var y = offset - i * this.gridLinesHeight;

      this.ctx.fillText(
        oyLabels.labels[i],
        _consts__WEBPACK_IMPORTED_MODULE_4__["CHART_GRID_PADDING"],
        y + _consts__WEBPACK_IMPORTED_MODULE_4__["OY_LABELS_MARGIN_TOP"]
      );
    }
  }

  this.ctx.beginPath();
  this.ctx.globalAlpha = 1;
  this.ctx.lineWidth = 1;
  this.ctx.strokeStyle = this.gridLinesColor;
  for (var i = 1; i < 6; i++) {
    var y = (oyLabels.labels.length - i) * this.gridLinesHeight;

    y -= 0.5;
    this.ctx.moveTo(_consts__WEBPACK_IMPORTED_MODULE_4__["CHART_GRID_PADDING"], y);
    this.ctx.lineTo(this.w - _consts__WEBPACK_IMPORTED_MODULE_4__["CHART_GRID_PADDING"], y);
  }
  this.ctx.stroke();

  if (oyLabels.alphaRight.value > 0) {
    this.ctx.fillStyle = this.columns[1].color;
    this.ctx.globalAlpha = oyLabels.alphaRight.value;
    var offset = Math.round(
      oyLabels.labelsRight.length * this.gridLinesHeight + oyLabels.offsetY*(1-oyLabels.alphaRight.value)
    );

    for (var i = 1; i < oyLabels.labelsRight.length; i++) {
      var y = offset - i * this.gridLinesHeight;

      this.ctx.fillText(
        oyLabels.labelsRight[i],
        _consts__WEBPACK_IMPORTED_MODULE_4__["CHART_GRID_PADDING"] + this.gridWidth - this.ctx.measureText(oyLabels.labelsRight[i]).width,
        y + _consts__WEBPACK_IMPORTED_MODULE_4__["OY_LABELS_MARGIN_TOP"]
      );
    }
  }
}

TwoAxesLineChart.prototype.checkRedrawBg = function(now) {
  _line_chart__WEBPACK_IMPORTED_MODULE_1__["LineChart"].prototype.checkRedrawBg.call(this, now);

  if (this.gridMaxYRight.nextTick(now)) this.needRedraw = true;
  if (this.oldOyLabels.alphaRight.nextTick(now)) this.needRedraw = true;
  if (this.newOyLabels.alphaRight.nextTick(now)) this.needRedraw = true;
}

TwoAxesLineChart.prototype.updateY = function () {
  var maxY = (this.columns[0].isOn) ? Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getMax"])(this.columns[0].values.slice(this.startInd, this.endInd+1)) : 0;
  var maxYRight = (this.columns[1].isOn) ? Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getMax"])(this.columns[1].values.slice(this.startInd, this.endInd+1)) : 0;
  var newGridStepY = Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getStepForGridValues"])(maxY);
  var newGridStepYRight = Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getStepForGridValues"])(maxYRight);

  if (this.gridStepY !== newGridStepY) {
    var now = performance.now();

    this.gridMaxY.set(newGridStepY*6, now, true);

    if (
      (this.oldOyLabels.offsetY > 0 && this.gridStepY > newGridStepY) ||
      (this.oldOyLabels.offsetY < 0 && this.gridStepY < newGridStepY)
    ) {
      this.oldOyLabels.offsetY *= -1;
      this.newOyLabels.offsetY *= -1;
    }

    this.gridStepY = newGridStepY;

    this.oldOyLabels.alpha.set(1);
    this.oldOyLabels.alpha.set(0, now, true);
    this.newOyLabels.alpha.set(0);
    this.newOyLabels.alpha.set(1, now, true);

    this.oldOyLabels.labels = this.newOyLabels.labels;
    this.newOyLabels.labels = (maxY !== 0) ? [0, 1, 2, 3, 4, 5].map(n => n*newGridStepY) : 0;
  }

  if (this.gridStepYRight !== newGridStepYRight) {
    var now = performance.now();

    this.gridMaxYRight.set(newGridStepYRight*6, now, true);
    this.gridStepYRight = newGridStepYRight;

    this.oldOyLabels.alphaRight.set(1);
    this.oldOyLabels.alphaRight.set(0, now, true);
    this.newOyLabels.alphaRight.set(0);
    this.newOyLabels.alphaRight.set(1, now, true);

    this.oldOyLabels.labelsRight = this.newOyLabels.labelsRight;
    this.newOyLabels.labelsRight = (maxYRight !== 0) ? [0, 1, 2, 3, 4, 5].map(n => n*newGridStepYRight) : [0];
  }
}

TwoAxesLineChart.prototype.getGridMaxForColumn = function(column) {
  return (this.columns[0].id === column.id) ? this.gridMaxY.value : this.gridMaxYRight.value;
}

TwoAxesLineChart.prototype.getGridMaxForColumnPreview = function(column) {
  return (this.columns[0].id === column.id) ? this.gridPreviewMaxY.value : this.gridPreviewMaxYRight.value;
}


/***/ }),

/***/ "./src/consts.js":
/*!***********************!*\
  !*** ./src/consts.js ***!
  \***********************/
/*! exports provided: PREVIEW_HEIGHT, PREVIEW_INNER_MARGIN_TOP, PREVIEW_INIT_W, PREVIEW_CHART_HEIGHT, PREVIEW_CHART_MARGIN, CHART_GRID_PADDING, GRID_LINES_COUNT, OXLABELS_HEIGHT, OX_LABELS_ANIMATION_DURATION, CHART_HEADER_HEIGHT, CHART_HEADER_MARGIN_BOTTOM, CHART_MAX_WIDTH, CHART_MIN_HEIGHT, CHART_MAX_HEIGHT, Y_ANIMATION_TIME, OY_LABELS_MARGIN_TOP, CHART_DAY_THEME, CHART_NIGHT_THEME, PREVIEW_DAY_THEME, PREVIEW_NIGHT_THEME */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PREVIEW_HEIGHT", function() { return PREVIEW_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PREVIEW_INNER_MARGIN_TOP", function() { return PREVIEW_INNER_MARGIN_TOP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PREVIEW_INIT_W", function() { return PREVIEW_INIT_W; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PREVIEW_CHART_HEIGHT", function() { return PREVIEW_CHART_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PREVIEW_CHART_MARGIN", function() { return PREVIEW_CHART_MARGIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHART_GRID_PADDING", function() { return CHART_GRID_PADDING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GRID_LINES_COUNT", function() { return GRID_LINES_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OXLABELS_HEIGHT", function() { return OXLABELS_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OX_LABELS_ANIMATION_DURATION", function() { return OX_LABELS_ANIMATION_DURATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHART_HEADER_HEIGHT", function() { return CHART_HEADER_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHART_HEADER_MARGIN_BOTTOM", function() { return CHART_HEADER_MARGIN_BOTTOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHART_MAX_WIDTH", function() { return CHART_MAX_WIDTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHART_MIN_HEIGHT", function() { return CHART_MIN_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHART_MAX_HEIGHT", function() { return CHART_MAX_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y_ANIMATION_TIME", function() { return Y_ANIMATION_TIME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OY_LABELS_MARGIN_TOP", function() { return OY_LABELS_MARGIN_TOP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHART_DAY_THEME", function() { return CHART_DAY_THEME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHART_NIGHT_THEME", function() { return CHART_NIGHT_THEME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PREVIEW_DAY_THEME", function() { return PREVIEW_DAY_THEME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PREVIEW_NIGHT_THEME", function() { return PREVIEW_NIGHT_THEME; });
const PREVIEW_HEIGHT = 44;
const PREVIEW_INNER_MARGIN_TOP = 2;
const PREVIEW_INIT_W = 0.2;

const PREVIEW_CHART_HEIGHT = 40;
const PREVIEW_CHART_MARGIN = 30;

const CHART_GRID_PADDING = 10;
const GRID_LINES_COUNT = 6;
const OXLABELS_HEIGHT = 30;
const OX_LABELS_ANIMATION_DURATION = 0.25;

const CHART_HEADER_HEIGHT = 20;
const CHART_HEADER_MARGIN_BOTTOM = 20;

const CHART_MAX_WIDTH = 500;
const CHART_MIN_HEIGHT = 150 + CHART_HEADER_HEIGHT + CHART_HEADER_MARGIN_BOTTOM + 80;
const CHART_MAX_HEIGHT = 400 + CHART_HEADER_HEIGHT + CHART_HEADER_MARGIN_BOTTOM + 80;

const Y_ANIMATION_TIME = .3;
const OY_LABELS_MARGIN_TOP = -5;

const CHART_DAY_THEME = {
  gridLinesColor: '#182D3B1A',
  gridTextsColor: '#8E8E93',
  chartTitleColor: '#000000',
  infoBackgroundColor: '#FFFFFF',
  infoTextColor: '#000000',
};

const CHART_NIGHT_THEME = {
  gridLinesColor: '#FFFFFF1A',
  gridTextsColor: '#A3B1C299',
  chartTitleColor: '#FFFFFF',
  infoBackgroundColor: '#242F3E',
  infoTextColor: '#FFFFFF',
};

const PREVIEW_DAY_THEME = {
  previewMaskColor: '#E2EEF9',
  previewMaskAlpha: .6,
  previewBorderColor: '#C0D1E1',
  previewCornersFillColor: '#FFFFFF'
};

const PREVIEW_NIGHT_THEME = {
  previewMaskColor: '#304259',
  previewMaskAlpha: .6,
  previewBorderColor: '#56626D',
  previewCornersFillColor: '#242F3E'
};


/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _data_chart1_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/chart1.json */ "./data/chart1.json");
var _data_chart1_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../data/chart1.json */ "./data/chart1.json", 1);
/* harmony import */ var _data_chart2_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/chart2.json */ "./data/chart2.json");
var _data_chart2_json__WEBPACK_IMPORTED_MODULE_1___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../data/chart2.json */ "./data/chart2.json", 1);
/* harmony import */ var _data_chart3_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/chart3.json */ "./data/chart3.json");
var _data_chart3_json__WEBPACK_IMPORTED_MODULE_2___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../data/chart3.json */ "./data/chart3.json", 1);
/* harmony import */ var _data_chart4_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/chart4.json */ "./data/chart4.json");
var _data_chart4_json__WEBPACK_IMPORTED_MODULE_3___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../data/chart4.json */ "./data/chart4.json", 1);
/* harmony import */ var _data_chart5_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/chart5.json */ "./data/chart5.json");
var _data_chart5_json__WEBPACK_IMPORTED_MODULE_4___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../data/chart5.json */ "./data/chart5.json", 1);
/* harmony import */ var _data_chart_data_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/chart_data.json */ "./data/chart_data.json");
var _data_chart_data_json__WEBPACK_IMPORTED_MODULE_5___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../data/chart_data.json */ "./data/chart_data.json", 1);
/* harmony import */ var _charts_line_chart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./charts/line-chart */ "./src/charts/line-chart.js");
/* harmony import */ var _charts_two_axes_line_chart__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./charts/two-axes-line-chart */ "./src/charts/two-axes-line-chart.js");
/* harmony import */ var _charts_stacked_bar_chart__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./charts/stacked-bar-chart */ "./src/charts/stacked-bar-chart.js");
/* harmony import */ var _charts_bar_chart__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./charts/bar-chart */ "./src/charts/bar-chart.js");
/* harmony import */ var _charts_stacked_area_chart__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./charts/stacked-area-chart */ "./src/charts/stacked-area-chart.js");







// import { createChart } from './charts/chart';






function main() {
  var appContainer = document.getElementById('app-container');

  var charts = [];

  // testCanvas();


  // console.log(chart_data_old_contest);

  // charts.push(lineChart(appContainer, chart_data_old_contest[0], 'Line chart'));
  charts.push(Object(_charts_line_chart__WEBPACK_IMPORTED_MODULE_6__["lineChart"])(appContainer, _data_chart1_json__WEBPACK_IMPORTED_MODULE_0__, 'Line chart'));
  charts.push(Object(_charts_two_axes_line_chart__WEBPACK_IMPORTED_MODULE_7__["twoAxesLineChart"])(appContainer, _data_chart2_json__WEBPACK_IMPORTED_MODULE_1__, 'Two axes line chart'));
  charts.push(Object(_charts_stacked_bar_chart__WEBPACK_IMPORTED_MODULE_8__["stackedBarChart"])(appContainer, _data_chart3_json__WEBPACK_IMPORTED_MODULE_2__, 'Stacked bar chart'));
  charts.push(Object(_charts_bar_chart__WEBPACK_IMPORTED_MODULE_9__["barChart"])(appContainer, _data_chart4_json__WEBPACK_IMPORTED_MODULE_3__, 'Bar chart'));
  charts.push(Object(_charts_stacked_area_chart__WEBPACK_IMPORTED_MODULE_10__["percentageStackedAreaChart"])(appContainer, _data_chart5_json__WEBPACK_IMPORTED_MODULE_4__, 'Stacked area chart'));

  var isDayMode = true;
  var button = document.getElementById('mode');
  button.addEventListener('click', function() {
    isDayMode = !isDayMode;

    for (var i = 0; i < charts.length; i++) {
      charts[i].switchMode(isDayMode);
    }

    if (isDayMode) {
      button.innerHTML = 'Switch to Night Mode';
      document.body.classList.remove('night-theme');
    }
    else {
      button.innerHTML = 'Switch to Day Mode';
      document.body.classList.add('night-theme');
    }

  });

  // testCanvas();
}


window.onload = function() {
  main();
  // testCanvas();
  // test();
}

function test() {

}

function testCanvas() {
  var size = 400;
  var canvas = document.createElement('canvas');
  canvas.width = size;
  canvas.height = size;
  var ctx = canvas.getContext('2d');

  function draw() {
    requestAnimationFrame(function() {
      ctx.clearRect(0, 0, size, size)

      var x = Math.floor(Math.random() * size - size/2);
      var y = Math.floor(Math.random() * size - size/2);

      ctx.beginPath();
      ctx.strokeStyle = '#FF0000';
      ctx.rect(x, y, 100, 100)
      ctx.stroke();

      draw();
    });
  }
  draw();

  document.body.append(canvas);
}


/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! exports provided: createLabelFromDate, getMatrixMin, getMatrixMax, getMin, getMax, debounce, throttle, getGridValuesByMax, getStepForGridValues, getDataColumnByName, transpose, round, sum, getPercents, getStackedPercents, getStackedArraySums */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLabelFromDate", function() { return createLabelFromDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatrixMin", function() { return getMatrixMin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatrixMax", function() { return getMatrixMax; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMin", function() { return getMin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMax", function() { return getMax; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return debounce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return throttle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGridValuesByMax", function() { return getGridValuesByMax; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStepForGridValues", function() { return getStepForGridValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDataColumnByName", function() { return getDataColumnByName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return transpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return sum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPercents", function() { return getPercents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStackedPercents", function() { return getStackedPercents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStackedArraySums", function() { return getStackedArraySums; });
function createLabelFromDate(date, withYear=false) {
  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
  var l = new Date(date).getDate() + ' ' + months[new Date(date).getMonth()];
  if (withYear) {
    l = l + ' ' + new Date(date).getFullYear();
  }
  return l;
}

function getMatrixMin(m) {
  return Math.min.apply(
    null,
    m.map(
      row => Math.min.apply(null, row)
    )
  );
}

function getMatrixMax(m) {
  return Math.max.apply(
    null,
    m.map(
      row => Math.max.apply(null, row)
    )
  );
}

function getMin(arr) {
  return Math.min.apply(null, arr);
}

function getMax(arr) {
  return Math.max.apply(null, arr);
}

function debounce(func, wait, immediate) {
	var timeout;
	return function() {
		var context = this, args = arguments;
		var later = function() {
			timeout = null;
			if (!immediate) func.apply(context, args);
		};
		var callNow = immediate && !timeout;
		clearTimeout(timeout);
		timeout = setTimeout(later, wait);
		if (callNow) func.apply(context, args);
	};
}

function throttle(func, limit) {
  var timer = null;
  var context = null;
  var args = null;

  var invoke = function() {
    func.apply(context, args);
    timer = null;
  }

  return function() {
    context = this;
    args = arguments;

    if (!timer) {
      timer = setTimeout(invoke, limit);
    }
  }
}

function getGridValuesByMax(max) { // FIXME Отвязать от 6
  const k = getStepForGridValues(max);
  return [0, 1, 2, 3, 4, 5, 6].map(i => i*k/5);
}

function getStepForGridValues(max, k=1) { // FIXME Отвязать от 6
  if (max == Number.POSITIVE_INFINITY || max == Number.NEGATIVE_INFINITY || max === 0) return 0;

  if (max > 100) return getStepForGridValues(max/10, k*10);
  if (max < 1) return getStepForGridValues(max*10, k/10);

  if (max % 5 == 0) return k*max/5;
  const a = max*5/6;
  if (a % 5 == 0) return k*a/5;

  const ds = [5, 4, 2, 1];
  return s(a, max, ds);

  function s(a, b, ds) {
    let d = ds.shift();
    for (let i=Math.floor(b);i>=Math.ceil(a);i--) {
      if (i % d == 0) return k*i/5;
    }
    return s(a, b, ds);
  }
}

function getDataColumnByName(name, data) {
  for (var i = 0; i < data.length; i++) {
    if (data[i][0] === name) {
      return data[i].slice(1);
    }
  }
  return [];
}

function transpose(arr) {
  return arr[0].map((col, i) => arr.map(row => row[i]));
}

function round(n, c=0) {
  return Math.round(n*Math.pow(10, c))/Math.pow(10, c);
}

function sum(array) {
  return array.reduce((a, c) => a + c);
}

function getPercents(values) {
  return values[0].map((_, i) => {
    var sum = values.map(c => c[i]).reduce((a, c) => a+c);
    if (sum === 0) return values.map(c => 0);
    return values.map(c => {
      return Math.round(10000*c[i]/sum)/100;
    });
  });
}

function getStackedPercents(values) {
  return getPercents(values).map((row, i) => {
    return row.map((p, i) => {
      return round(sum(row.slice(0, i+1)), 2)
    })
  })
}

function getStackedArraySums(values) {
  return transpose(transpose(values).map((row, i) => {
    return row.map((p, i) => {
      return round(sum(row.slice(0, i+1)), 2)
    })
  }))
}


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,